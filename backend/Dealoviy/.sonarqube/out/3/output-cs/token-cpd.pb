û
qD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Services\DateTimeProvider.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Services" *
;* +
public 
class 
DateTimeProvider 
: 
IDateTimeProvider  1
{ 
public 

DateTime 
UtcNow 
=> 
DateTime &
.& '
UtcNow' -
;- .
} ∆
D:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\UserRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class 
UserRepository 
: 
BaseRepository ,
,, -
IUserRepository. =
{		 
public 

UserRepository 
( 
DealoviyDbContext +
	dbContext, 5
)5 6
:7 8
base9 =
(= >
	dbContext> G
)G H
{ 
} 
public 

async 
Task 
< 
User 
? 
> 
GetUserByIdAsync -
(- .
Guid. 2
id3 5
)5 6
{ 
return 
await 
	DbContext 
. 
Users $
.$ %
FirstOrDefaultAsync% 8
(8 9
user9 =
=>> @
userA E
.E F
IdF H
==I K
idL N
)N O
;O P
} 
public 

async 
Task 
< 
User 
? 
> "
GetUserByUsernameAsync 3
(3 4
string4 :
username; C
)C D
{ 
return 
await 
	DbContext 
. 
Users $
.$ %
FirstOrDefaultAsync% 8
(8 9
user9 =
=>> @
userA E
.E F
UsernameF N
==O Q
usernameR Z
)Z [
;[ \
} 
public 

async 
Task 
< 
User 
? 
> "
GetByContractorIdAsync 3
(3 4
Guid4 8
contractorId9 E
)E F
{ 
return 
await 
	DbContext 
. 
Users $
.$ %
FirstOrDefaultAsync% 8
(8 9
user9 =
=>> @
userA E
.E F
ContractorProfileIdF Y
==Z \
contractorId] i
)i j
;j k
} 
public 

async 
Task 
AddAsync 
( 
User #
user$ (
)( )
{ 
await 
	DbContext 
. 
Users 
. 
AddAsync &
(& '
user' +
)+ ,
;, -
await   
	DbContext   
.   
SaveChangesAsync   (
(  ( )
)  ) *
;  * +
}!! 
public## 

async## 
Task## 
UpdateAsync## !
(##! "
User##" &
user##' +
)##+ ,
{$$ 
	DbContext%% 
.%% 
Users%% 
.%% 
Update%% 
(%% 
user%% #
)%%# $
;%%$ %
await&& 
	DbContext&& 
.&& 
SaveChangesAsync&& (
(&&( )
)&&) *
;&&* +
}'' 
}(( î
ÇD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\ServiceRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class 
ServiceRepository 
:  
BaseRepository! /
,/ 0
IServiceRepository1 C
{		 
public

 

ServiceRepository

 
(

 
DealoviyDbContext

 .
	dbContext

/ 8
)

8 9
:

: ;
base

< @
(

@ A
	dbContext

A J
)

J K
{ 
} 
public 

async 
Task 
< 
Service 
? 
> 
GetByIdAsync  ,
(, -
Guid- 1
id2 4
)4 5
{ 
return 
await 
	DbContext 
. 
Services '
.' (
FirstOrDefaultAsync( ;
(; <
service< C
=>D F
serviceG N
.N O
IdO Q
==R T
idU W
)W X
;X Y
} 
public 

async 
Task 
AddAsync 
( 
Service &
service' .
). /
{ 
await 
	DbContext 
. 
Services  
.  !
AddAsync! )
() *
service* 1
)1 2
;2 3
await 
	DbContext 
. 
SaveChangesAsync (
(( )
)) *
;* +
} 
public 

async 
Task 
UpdateAsync !
(! "
Service" )
service* 1
)1 2
{ 
	DbContext 
. 
Services 
. 
Update !
(! "
service" )
)) *
;* +
await 
	DbContext 
. 
SaveChangesAsync (
(( )
)) *
;* +
} 
public   

async   
Task   
<   
IEnumerable   !
<  ! "
Service  " )
>  ) *
>  * +$
GetByKeywordAndCityAsync  , D
(  D E
string  E K
keyword  L S
,  S T
Guid  U Y
cityId  Z `
)  ` a
{!! 
return"" 
await"" 
	DbContext"" 
."" 
Services"" '
.## 
Where## 
(## 
service## 
=>## 
service## %
.##% &
Name##& *
.##* +
Contains##+ 3
(##3 4
keyword##4 ;
)##; <
&&$$  
service$$! (
.$$( )
CityId$$) /
==$$0 2
cityId$$3 9
)$$9 :
.%% 
ToListAsync%% 
(%% 
)%% 
;%% 
}&& 
public(( 

async(( 
Task(( 
<(( 
IEnumerable(( !
<((! "
Service((" )
>(() *
>((* +"
GetByContractorIdAsync((, B
(((B C
Guid((C G
contractorId((H T
)((T U
{)) 
return** 
await** 
	DbContext** 
.** 
Services** '
.++ 
Where++ 
(++ 
service++ 
=>++ 
service++ %
.++% &
ContractorId++& 2
==++3 5
contractorId++6 B
)++B C
.,, 
ToListAsync,, 
(,, 
),, 
;,, 
}-- 
}.. Ú
ÅD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\ReviewRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class 
ReviewRepository 
: 
BaseRepository  .
,. /
IReviewRepository0 A
{		 
public

 

ReviewRepository

 
(

 
DealoviyDbContext

 -
	dbContext

. 7
)

7 8
:

9 :
base

; ?
(

? @
	dbContext

@ I
)

I J
{ 
} 
public 

async 
Task 
	AddReview 
(  
Review  &
review' -
)- .
{ 
await 
	DbContext 
. 
Reviews 
.  
AddAsync  (
(( )
review) /
)/ 0
;0 1
await 
	DbContext 
. 
SaveChangesAsync (
(( )
)) *
;* +
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Review" (
>( )
>) *!
GetReviewsByServiceId+ @
(@ A
GuidA E
	serviceIdF O
)O P
{ 
return 
await 
	DbContext 
. 
Reviews &
. 
Where 
( 
r 
=> 
r 
. 
	ServiceId #
==$ &
	serviceId' 0
)0 1
. 
ToListAsync 
( 
) 
; 
} 
} Å 
ÇD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\RequestRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class 
RequestRepository 
:  
BaseRepository! /
,/ 0
IRequestRepository1 C
{		 
public

 

RequestRepository

 
(

 
DealoviyDbContext

 .
	dbContext

/ 8
)

8 9
:

: ;
base

< @
(

@ A
	dbContext

A J
)

J K
{ 
} 
public 

async 
Task 
AddAsync 
( 
Request &
request' .
). /
{ 
await 
	DbContext 
. 
Requests  
.  !
AddAsync! )
() *
request* 1
)1 2
;2 3
await 
	DbContext 
. 
SaveChangesAsync (
(( )
)) *
;* +
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Request" )
>) *
>* +
GetByServiceIdAsync, ?
(? @
Guid@ D
	serviceIdE N
)N O
{ 
return 
await 
	DbContext 
. 
Requests '
. 
Where 
( 
r 
=> 
r 
. 
	ServiceId #
==$ &
	serviceId' 0
)0 1
. 
ToListAsync 
( 
) 
; 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Request" )
>) *
>* + 
GetByCustomerIdAsync, @
(@ A
GuidA E

customerIdF P
)P Q
{ 
return 
await 
	DbContext 
. 
Requests '
. 
Where 
( 
r 
=> 
r 
. 

CustomerId $
==% '

customerId( 2
)2 3
. 
ToListAsync 
( 
) 
; 
}   
public"" 

async"" 
Task"" 
<"" 
Request"" 
?"" 
>"" 
GetByIdAsync""  ,
("", -
Guid""- 1
	requestId""2 ;
)""; <
{## 
return$$ 
await$$ 
	DbContext$$ 
.$$ 
Requests$$ '
.%% 
FirstOrDefaultAsync%%  
(%%  !
r%%! "
=>%%# %
r%%& '
.%%' (
Id%%( *
==%%+ -
	requestId%%. 7
)%%7 8
;%%8 9
}&& 
public(( 

async(( 
Task(( 
UpdateAsync(( !
(((! "
Request((" )
request((* 1
)((1 2
{)) 
	DbContext** 
.** 
Requests** 
.** 
Update** !
(**! "
request**" )
)**) *
;*** +
await++ 
	DbContext++ 
.++ 
SaveChangesAsync++ (
(++( )
)++) *
;++* +
},, 
public.. 

async.. 
Task.. 
DeleteAsync.. !
(..! "
Request.." )
request..* 1
)..1 2
{// 
	DbContext00 
.00 
Requests00 
.00 
Remove00 !
(00! "
request00" )
)00) *
;00* +
await11 
	DbContext11 
.11 
SaveChangesAsync11 (
(11( )
)11) *
;11* +
}22 
}33 Õ
ÅD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\RegionRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class 
RegionRepository 
: 
BaseRepository  .
,. /
IRegionRepository0 A
{		 
public

 

RegionRepository

 
(

 
DealoviyDbContext

 -
	dbContext

. 7
)

7 8
:

9 :
base

; ?
(

? @
	dbContext

@ I
)

I J
{ 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Region" (
>( )
>) *
GetAllRegionsAsync+ =
(= >
)> ?
{ 
return 
await 
	DbContext 
. 
Regions &
.& '
ToListAsync' 2
(2 3
)3 4
;4 5
} 
public 

async 
Task 
< 
Region 
? 
> 
GetRegionByIdAsync 1
(1 2
Guid2 6
id7 9
)9 :
{ 
return 
await 
	DbContext 
. 
Regions &
.& '
FirstOrDefaultAsync' :
(: ;
region; A
=>B D
regionE K
.K L
IdL N
==O Q
idR T
)T U
;U V
} 
} Ú
ÄD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\OrderRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class 
OrderRepository 
: 
BaseRepository -
,- .
IOrderRepository/ ?
{		 
public

 

OrderRepository

 
(

 
DealoviyDbContext

 ,
	dbContext

- 6
)

6 7
:

8 9
base

: >
(

> ?
	dbContext

? H
)

H I
{ 
} 
public 

async 
Task 
AddAsync 
( 
Order $
order% *
)* +
{ 
await 
	DbContext 
. 
Orders 
. 
AddAsync '
(' (
order( -
)- .
;. /
await 
	DbContext 
. 
SaveChangesAsync (
(( )
)) *
;* +
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Order" '
>' (
>( )
GetByServiceIdAsync* =
(= >
Guid> B
	serviceIdC L
)L M
{ 
return 
await 
	DbContext 
. 
Orders %
. 
Where 
( 
o 
=> 
o 
. 
	ServiceId #
==$ &
	serviceId' 0
)0 1
. 
ToListAsync 
( 
) 
; 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Order" '
>' (
>( ) 
GetByCustomerIdAsync* >
(> ?
Guid? C

customerIdD N
)N O
{ 
return 
await 
	DbContext 
. 
Orders %
. 
Where 
( 
o 
=> 
o 
. 

CustomerId $
==% '

customerId( 2
)2 3
. 
ToListAsync 
( 
) 
; 
}   
public"" 

async"" 
Task"" 
<"" 
Order"" 
?"" 
>"" 
GetByIdAsync"" *
(""* +
Guid""+ /
	requestId""0 9
)""9 :
{## 
return$$ 
await$$ 
	DbContext$$ 
.$$ 
Orders$$ %
.%% 
FirstOrDefaultAsync%%  
(%%  !
o%%! "
=>%%# %
o%%& '
.%%' (
Id%%( *
==%%+ -
	requestId%%. 7
)%%7 8
;%%8 9
}&& 
public(( 

Task(( 
UpdateAsync(( 
((( 
Order(( !
request((" )
)(() *
{)) 
	DbContext** 
.** 
Orders** 
.** 
Update** 
(**  
request**  '
)**' (
;**( )
return++ 
	DbContext++ 
.++ 
SaveChangesAsync++ )
(++) *
)++* +
;+++ ,
},, 
}--  
åD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\ContractorProfileRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class '
ContractorProfileRepository (
:) *
BaseRepository+ 9
,9 :(
IContractorProfileRepository; W
{		 
public

 
'
ContractorProfileRepository

 &
(

& '
DealoviyDbContext

' 8
	dbContext

9 B
)

B C
:

D E
base

F J
(

J K
	dbContext

K T
)

T U
{ 
} 
public 

async 
Task 
< 
ContractorProfile '
?' (
>( )
GetByIdAsync* 6
(6 7
Guid7 ;
id< >
)> ?
{ 
return 
await 
	DbContext 
. 
ContractorProfiles 1
. 
FirstOrDefaultAsync  
(  !
profile! (
=>) +
profile, 3
.3 4
Id4 6
==7 9
id: <
)< =
;= >
} 
public 

async 
Task 
AddAsync 
( 
ContractorProfile 0
profile1 8
)8 9
{ 
await 
	DbContext 
. 
ContractorProfiles *
.* +
AddAsync+ 3
(3 4
profile4 ;
); <
;< =
await 
	DbContext 
. 
SaveChangesAsync (
(( )
)) *
;* +
} 
public 

async 
Task 
UpdateAsync !
(! "
ContractorProfile" 3
profile4 ;
); <
{ 
	DbContext 
. 
ContractorProfiles $
.$ %
Update% +
(+ ,
profile, 3
)3 4
;4 5
await 
	DbContext 
. 
SaveChangesAsync (
(( )
)) *
;* +
} 
} •
D:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\CityRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
;: ;
public 
class 
CityRepository 
: 
BaseRepository ,
,, -
ICityRepository. =
{		 
public 

CityRepository 
( 
DealoviyDbContext +
	dbContext, 5
)5 6
:7 8
base9 =
(= >
	dbContext> G
)G H
{ 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
City" &
>& '
>' ($
GetCitiesByRegionIdAsync) A
(A B
GuidB F
regionIdG O
)O P
{ 
return 
await 
	DbContext 
. 
Cities %
.% &
Where 
( 
city 
=> 
city 
. 
RegionId '
==( *
regionId+ 3
)3 4
. 
ToListAsync 
( 
) 
; 
} 
public 

async 
Task 
< 
City 
? 
> 
GetCityByIdAsync -
(- .
Guid. 2
id3 5
)5 6
{ 
return 
await 
	DbContext 
. 
Cities %
. 
FirstOrDefaultAsync  
(  !
city! %
=>& (
city) -
.- .
Id. 0
==1 3
id4 6
)6 7
;7 8
} 
} œ
àD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\Repositories\Abstract\BaseRepository.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
.- .
Repositories. :
.: ;
Abstract; C
;C D
public 
abstract 
class 
BaseRepository $
{ 
private 
	protected 
readonly 
DealoviyDbContext 0
	DbContext1 :
;: ;
	protected 
BaseRepository 
( 
DealoviyDbContext .
	dbContext/ 8
)8 9
{ 
	DbContext		 
=		 
	dbContext		 
;		 
}

 
} ù!
zD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\ModelBuilderExtensions.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
;- .
public

 
static

 
class

 "
ModelBuilderExtensions

 *
{ 
public 

static 
void 
SeedLocationData '
(' (
this( ,
ModelBuilder- 9
builder: A
)A B
{ 
var 
locationCsvPath 
= 
FilePathBuilder -
.- .
GetDataFilePath. =
(= >
$str> F
)F G
;G H
using 
var 
streamReader 
=  
new! $
StreamReader% 1
(1 2
locationCsvPath2 A
,A B
EncodingC K
.K L
UTF8L P
)P Q
;Q R
streamReader 
. 

BaseStream 
.  
Position  (
=) *
$num+ ,
;, -
using 
var 
	csvReader 
= 
new !
	CsvReader" +
(+ ,
streamReader, 8
,8 9
new: =
CsvConfiguration> N
(N O
CultureInfoO Z
.Z [
InvariantCulture[ k
)k l
{ 	
HasHeaderRecord 
= 
true "
} 	
)	 

;
 
var 
regions 
= 
new 
HashSet !
<! "
Region" (
>( )
() *
)* +
;+ ,
var 
cities 
= 
new 
List 
< 
City "
>" #
(# $
)$ %
;% &
	csvReader 
. 
Read 
( 
) 
; 
	csvReader 
. 

ReadHeader 
( 
) 
; 
while 
( 
	csvReader 
. 
Read 
( 
) 
)  
{ 	
var   

regionName   
=   
	csvReader   &
.  & '
GetField  ' /
(  / 0
$str  0 <
)  < =
;  = >
var"" 
region"" 
="" 
regions""  
.""  !
FirstOrDefault""! /
(""/ 0
r""0 1
=>""2 4
r""5 6
.""6 7
Name""7 ;
==""< >

regionName""? I
)""I J
;""J K
if## 
(## 
region## 
is## 
null## 
)## 
{$$ 
region%% 
=%% 
Region%% 
.%%  
Create%%  &
(%%& '

regionName%%' 1
)%%1 2
;%%2 3
regions&& 
.&& 
Add&& 
(&& 
region&& "
)&&" #
;&&# $
}'' 
var)) 
cityName)) 
=)) 
	csvReader)) $
.))$ %
GetField))% -
())- .
$str)). 4
)))4 5
;))5 6
var++ 
city++ 
=++ 
City++ 
.++ 
Create++ "
(++" #
cityName++# +
,+++ ,
region++- 3
.++3 4
Id++4 6
)++6 7
;++7 8
cities,, 
.,, 
Add,, 
(,, 
city,, 
),, 
;,, 
}.. 	
builder00 
.00 
Entity00 
<00 
Region00 
>00 
(00 
)00  
.00  !
HasData00! (
(00( )
regions00) 0
)000 1
;001 2
builder22 
.22 
Entity22 
<22 
City22 
>22 
(22 
)22 
.22 
HasData22 &
(22& '
cities22' -
)22- .
;22. /
}33 
}44 â
sD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\FilePathBuilder.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Persistence" -
;- .
public 
static 
class 
FilePathBuilder #
{ 
private 
static 
readonly 
string "
DataDirectory# 0
=1 2
$str3 9
;9 :
public 

static 
string 
GetDataFilePath (
(( )
string) /
fileName0 8
)8 9
{ 
var		 
basePath		 
=		 
	Directory		  
.		  !
	GetParent		! *
(		* +

AppContext		+ 5
.		5 6
BaseDirectory		6 C
)		C D
?		D E
.

 
Parent

 
?

 
. 
Parent 
? 
. 
Parent 
? 
. 
Parent 
? 
. 
FullName 
; 
return 
Path 
. 
Combine 
( 
basePath $
,$ %
DataDirectory& 3
,3 4
fileName5 =
)= >
;> ?
} 
} ÷1
xD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\OrderConfiguration.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public

 
class

 
OrderConfiguration

 
:

  !$
IEntityTypeConfiguration

" :
<

: ;
Order

; @
>

@ A
{ 
public 

void 
	Configure 
( 
EntityTypeBuilder +
<+ ,
Order, 1
>1 2
builder3 :
): ;
{ 
builder 
. 
ToTable 
( 
$str  
)  !
;! "
builder 
. 
HasKey 
( 
request 
=> !
request" )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,
Id, .
). /
./ 0
ValueGeneratedNever0 C
(C D
)D E
;E F
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,
	ServiceId, 5
)5 6
.6 7

IsRequired7 A
(A B
)B C
;C D
builder 
. 
HasOne 
< 
Service 
> 
(  
)  !
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
request "
=># %
request& -
.- .
	ServiceId. 7
)7 8
;8 9
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,

CustomerId, 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
;D E
builder 
. 
HasOne 
< 
User 
> 
( 
) 
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
request "
=># %
request& -
.- .

CustomerId. 8
)8 9
;9 :
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,
Description, 7
)7 8
.8 9

IsRequired9 C
(C D
)D E
;E F
builder 
. 
OwnsOne 
< 
ContactInfo #
># $
($ %
nameof% +
(+ ,
Order, 1
.1 2
CustomerContactInfo2 E
)E F
,F G
bH I
=>J L
{ 	
b   
.   
Property   
(   
ci   
=>   
ci   
.    
Type    $
)  $ %
.!! 
HasColumnName!! 
(!! 
$str!! 4
)!!4 5
."" 
HasConversion"" 
<"" 
string"" %
>""% &
(""& '
)""' (
.## 
HasMaxLength## 
(## 
$num##  
)##  !
.$$ 

IsRequired$$ 
($$ 
)$$ 
;$$ 
b%% 
.%% 
Property%% 
(%% 
ci%% 
=>%% 
ci%% 
.%%  
Value%%  %
)%%% &
.&& 
HasColumnName&& 
(&& 
$str&& 5
)&&5 6
.'' 
HasMaxLength'' 
('' 
$num'' !
)''! "
.(( 

IsRequired(( 
((( 
)(( 
;(( 
})) 	
)))	 

;))
 
builder++ 
.++ 
OwnsOne++ 
<++ 
ContactInfo++ #
>++# $
(++$ %
nameof++% +
(+++ ,
Order++, 1
.++1 2!
ContractorContactInfo++2 G
)++G H
,++H I
b++J K
=>++L N
{,, 	
b-- 
.-- 
Property-- 
(-- 
ci-- 
=>-- 
ci-- 
.--  
Type--  $
)--$ %
... 
HasColumnName.. 
(.. 
$str.. 6
)..6 7
.// 
HasConversion// 
<// 
string// %
>//% &
(//& '
)//' (
.00 
HasMaxLength00 
(00 
$num00  
)00  !
.11 

IsRequired11 
(11 
)11 
;11 
b22 
.22 
Property22 
(22 
ci22 
=>22 
ci22 
.22  
Value22  %
)22% &
.33 
HasColumnName33 
(33 
$str33 7
)337 8
.44 
HasMaxLength44 
(44 
$num44 !
)44! "
.55 

IsRequired55 
(55 
)55 
;55 
}66 	
)66	 

;66
 
builder77 
.77 
Property77 
(77 
request77  
=>77! #
request77$ +
.77+ ,
PaymentAmount77, 9
)779 :
.77: ;

IsRequired77; E
(77E F
)77F G
;77G H
builder88 
.88 
Property88 
(88 
request88  
=>88! #
request88$ +
.88+ ,
	OrderDate88, 5
)885 6
.886 7

IsRequired887 A
(88A B
)88B C
;88C D
builder:: 
.:: 
Property:: 
(:: 
request::  
=>::! #
request::$ +
.::+ ,
OrderStatus::, 7
)::7 8
.;; 
HasConversion;; 
<;; 
string;; !
>;;! "
(;;" #
);;# $
;;;$ %
}<< 
}== ‚
uD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Persistence\DealoviyDbContext.cs
	namespace

 	
Dealoviy


 
.

 
Infrastructure

 !
.

! "
Persistence

" -
;

- .
public 
class 
DealoviyDbContext 
:  
	DbContext! *
{ 
public 

DealoviyDbContext 
( 
DbContextOptions -
<- .
DealoviyDbContext. ?
>? @
optionsA H
)H I
:J K
baseL P
(P Q
optionsQ X
)X Y
{ 
} 
public 

DbSet 
< 
User 
> 
Users 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
null- 1
!1 2
;2 3
public 

DbSet 
< 
Region 
> 
Regions  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
public 

DbSet 
< 
City 
> 
Cities 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
null. 2
!2 3
;3 4
public 

DbSet 
< 
ContractorProfile "
>" #
ContractorProfiles$ 6
{7 8
get9 <
;< =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
public 

DbSet 
< 
Service 
> 
Services "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
!7 8
;8 9
public 

DbSet 
< 
Request 
> 
Requests "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
!7 8
;8 9
public 

DbSet 
< 
Order 
> 
Orders 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 

DbSet 
< 
Review 
> 
Reviews  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. +
ApplyConfigurationsFromAssembly 4
(4 5
typeof5 ;
(; <
DealoviyDbContext< M
)M N
.N O
AssemblyO W
)W X
;X Y
modelBuilder 
. 
SeedLocationData %
(% &
)& '
;' (
base 
. 
OnModelCreating 
( 
modelBuilder )
)) *
;* +
} 
}   Í
zD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\RegionConfigurations.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public 
class  
RegionConfigurations !
:" #$
IEntityTypeConfiguration$ <
<< =
Region= C
>C D
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
Region		, 2
>		2 3
builder		4 ;
)		; <
{

 
builder 
. 
ToTable 
( 
$str !
)! "
;" #
builder 
. 
HasKey 
( 
r 
=> 
r 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
r 
=> 
r 
.  
Id  "
)" #
. 
ValueGeneratedNever  
(  !
)! "
. 

IsRequired 
( 
) 
; 
builder 
. 
Property 
( 
r 
=> 
r 
.  
Name  $
)$ %
. 
HasMaxLength 
( 
$num 
) 
. 

IsRequired 
( 
) 
; 
builder 
. 
HasMany 
< 
City 
> 
( 
) 
. 
WithOne 
( 
) 
. 
HasForeignKey 
( 
c 
=> 
c  !
.! "
RegionId" *
)* +
;+ ,
} 
} çÕ
yD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Migrations\20240115154823_Initial.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "

Migrations" ,
{		 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str *
,* +
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
AdditionalInfo "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ O
,O P
	maxLengthQ Z
:Z [
$num\ _
,_ `
nullablea i
:i j
falsek p
)p q
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% <
,< =
x> ?
=>@ B
xC D
.D E
IdE G
)G H
;H I
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
Id   
=   
table   
.   
Column   %
<  % &
Guid  & *
>  * +
(  + ,
type  , 0
:  0 1
$str  2 D
,  D E
nullable  F N
:  N O
false  P U
)  U V
,  V W
Name!! 
=!! 
table!!  
.!!  !
Column!!! '
<!!' (
string!!( .
>!!. /
(!!/ 0
type!!0 4
:!!4 5
$str!!6 E
,!!E F
	maxLength!!G P
:!!P Q
$num!!R U
,!!U V
nullable!!W _
:!!_ `
false!!a f
)!!f g
}"" 
,"" 
constraints## 
:## 
table## "
=>### %
{$$ 
table%% 
.%% 

PrimaryKey%% $
(%%$ %
$str%%% 1
,%%1 2
x%%3 4
=>%%5 7
x%%8 9
.%%9 :
Id%%: <
)%%< =
;%%= >
}&& 
)&& 
;&& 
migrationBuilder(( 
.(( 
CreateTable(( (
(((( )
name)) 
:)) 
$str)) 7
,))7 8
columns** 
:** 
table** 
=>** !
new**" %
{++ 
Id,, 
=,, 
table,, 
.,, 
Column,, %
<,,% &
int,,& )
>,,) *
(,,* +
type,,+ /
:,,/ 0
$str,,1 6
,,,6 7
nullable,,8 @
:,,@ A
false,,B G
),,G H
.-- 

Annotation-- #
(--# $
$str--$ 8
,--8 9
$str--: @
)--@ A
,--A B
Type.. 
=.. 
table..  
...  !
Column..! '
<..' (
string..( .
>... /
(../ 0
type..0 4
:..4 5
$str..6 D
,..D E
	maxLength..F O
:..O P
$num..Q S
,..S T
nullable..U ]
:..] ^
false.._ d
)..d e
,..e f
Value// 
=// 
table// !
.//! "
Column//" (
<//( )
string//) /
>/// 0
(//0 1
type//1 5
://5 6
$str//7 F
,//F G
	maxLength//H Q
://Q R
$num//S V
,//V W
nullable//X `
://` a
false//b g
)//g h
,//h i
UserId00 
=00 
table00 "
.00" #
Column00# )
<00) *
Guid00* .
>00. /
(00/ 0
type000 4
:004 5
$str006 H
,00H I
nullable00J R
:00R S
false00T Y
)00Y Z
}11 
,11 
constraints22 
:22 
table22 "
=>22# %
{33 
table44 
.44 

PrimaryKey44 $
(44$ %
$str44% I
,44I J
x44K L
=>44M O
x44P Q
.44Q R
Id44R T
)44T U
;44U V
table55 
.55 

ForeignKey55 $
(55$ %
name66 
:66 
$str66 \
,66\ ]
column77 
:77 
x77  !
=>77" $
x77% &
.77& '
UserId77' -
,77- .
principalTable88 &
:88& '
$str88( <
,88< =
principalColumn99 '
:99' (
$str99) -
,99- .
onDelete::  
:::  !
ReferentialAction::" 3
.::3 4
Cascade::4 ;
)::; <
;::< =
};; 
);; 
;;; 
migrationBuilder== 
.== 
CreateTable== (
(==( )
name>> 
:>> 
$str>> 
,>> 
columns?? 
:?? 
table?? 
=>?? !
new??" %
{@@ 
IdAA 
=AA 
tableAA 
.AA 
ColumnAA %
<AA% &
GuidAA& *
>AA* +
(AA+ ,
typeAA, 0
:AA0 1
$strAA2 D
,AAD E
nullableAAF N
:AAN O
falseAAP U
)AAU V
,AAV W
UsernameBB 
=BB 
tableBB $
.BB$ %
ColumnBB% +
<BB+ ,
stringBB, 2
>BB2 3
(BB3 4
typeBB4 8
:BB8 9
$strBB: H
,BBH I
	maxLengthBBJ S
:BBS T
$numBBU W
,BBW X
nullableBBY a
:BBa b
falseBBc h
)BBh i
,BBi j
DisplayNameCC 
=CC  !
tableCC" '
.CC' (
ColumnCC( .
<CC. /
stringCC/ 5
>CC5 6
(CC6 7
typeCC7 ;
:CC; <
$strCC= K
,CCK L
	maxLengthCCM V
:CCV W
$numCCX Z
,CCZ [
nullableCC\ d
:CCd e
trueCCf j
)CCj k
,CCk l
PasswordHashDD  
=DD! "
tableDD# (
.DD( )
ColumnDD) /
<DD/ 0
stringDD0 6
>DD6 7
(DD7 8
typeDD8 <
:DD< =
$strDD> M
,DDM N
nullableDDO W
:DDW X
falseDDY ^
)DD^ _
,DD_ `
ContractorProfileIdEE '
=EE( )
tableEE* /
.EE/ 0
ColumnEE0 6
<EE6 7
GuidEE7 ;
>EE; <
(EE< =
typeEE= A
:EEA B
$strEEC U
,EEU V
nullableEEW _
:EE_ `
trueEEa e
)EEe f
}FF 
,FF 
constraintsGG 
:GG 
tableGG "
=>GG# %
{HH 
tableII 
.II 

PrimaryKeyII $
(II$ %
$strII% /
,II/ 0
xII1 2
=>II3 5
xII6 7
.II7 8
IdII8 :
)II: ;
;II; <
tableJJ 
.JJ 

ForeignKeyJJ $
(JJ$ %
nameKK 
:KK 
$strKK O
,KKO P
columnLL 
:LL 
xLL  !
=>LL" $
xLL% &
.LL& '
ContractorProfileIdLL' :
,LL: ;
principalTableMM &
:MM& '
$strMM( <
,MM< =
principalColumnNN '
:NN' (
$strNN) -
)NN- .
;NN. /
}OO 
)OO 
;OO 
migrationBuilderQQ 
.QQ 
CreateTableQQ (
(QQ( )
nameRR 
:RR 
$strRR 
,RR 
columnsSS 
:SS 
tableSS 
=>SS !
newSS" %
{TT 
IdUU 
=UU 
tableUU 
.UU 
ColumnUU %
<UU% &
GuidUU& *
>UU* +
(UU+ ,
typeUU, 0
:UU0 1
$strUU2 D
,UUD E
nullableUUF N
:UUN O
falseUUP U
)UUU V
,UUV W
NameVV 
=VV 
tableVV  
.VV  !
ColumnVV! '
<VV' (
stringVV( .
>VV. /
(VV/ 0
typeVV0 4
:VV4 5
$strVV6 E
,VVE F
	maxLengthVVG P
:VVP Q
$numVVR U
,VVU V
nullableVVW _
:VV_ `
falseVVa f
)VVf g
,VVg h
RegionIdWW 
=WW 
tableWW $
.WW$ %
ColumnWW% +
<WW+ ,
GuidWW, 0
>WW0 1
(WW1 2
typeWW2 6
:WW6 7
$strWW8 J
,WWJ K
nullableWWL T
:WWT U
falseWWV [
)WW[ \
}XX 
,XX 
constraintsYY 
:YY 
tableYY "
=>YY# %
{ZZ 
table[[ 
.[[ 

PrimaryKey[[ $
([[$ %
$str[[% 0
,[[0 1
x[[2 3
=>[[4 6
x[[7 8
.[[8 9
Id[[9 ;
)[[; <
;[[< =
table\\ 
.\\ 

ForeignKey\\ $
(\\$ %
name]] 
:]] 
$str]] :
,]]: ;
column^^ 
:^^ 
x^^  !
=>^^" $
x^^% &
.^^& '
RegionId^^' /
,^^/ 0
principalTable__ &
:__& '
$str__( 1
,__1 2
principalColumn`` '
:``' (
$str``) -
,``- .
onDeleteaa  
:aa  !
ReferentialActionaa" 3
.aa3 4
Cascadeaa4 ;
)aa; <
;aa< =
}bb 
)bb 
;bb 
migrationBuilderdd 
.dd 
CreateTabledd (
(dd( )
nameee 
:ee 
$stree  
,ee  !
columnsff 
:ff 
tableff 
=>ff !
newff" %
{gg 
Idhh 
=hh 
tablehh 
.hh 
Columnhh %
<hh% &
Guidhh& *
>hh* +
(hh+ ,
typehh, 0
:hh0 1
$strhh2 D
,hhD E
nullablehhF N
:hhN O
falsehhP U
)hhU V
,hhV W
ContractorIdii  
=ii! "
tableii# (
.ii( )
Columnii) /
<ii/ 0
Guidii0 4
>ii4 5
(ii5 6
typeii6 :
:ii: ;
$strii< N
,iiN O
nullableiiP X
:iiX Y
falseiiZ _
)ii_ `
,ii` a
CityIdjj 
=jj 
tablejj "
.jj" #
Columnjj# )
<jj) *
Guidjj* .
>jj. /
(jj/ 0
typejj0 4
:jj4 5
$strjj6 H
,jjH I
nullablejjJ R
:jjR S
falsejjT Y
)jjY Z
,jjZ [
Namekk 
=kk 
tablekk  
.kk  !
Columnkk! '
<kk' (
stringkk( .
>kk. /
(kk/ 0
typekk0 4
:kk4 5
$strkk6 E
,kkE F
	maxLengthkkG P
:kkP Q
$numkkR U
,kkU V
nullablekkW _
:kk_ `
falsekka f
)kkf g
,kkg h
Descriptionll 
=ll  !
tablell" '
.ll' (
Columnll( .
<ll. /
stringll/ 5
>ll5 6
(ll6 7
typell7 ;
:ll; <
$strll= L
,llL M
	maxLengthllN W
:llW X
$numllY \
,ll\ ]
nullablell^ f
:llf g
falsellh m
)llm n
,lln o
LowerPriceBoundmm #
=mm$ %
tablemm& +
.mm+ ,
Columnmm, 2
<mm2 3
intmm3 6
>mm6 7
(mm7 8
typemm8 <
:mm< =
$strmm> C
,mmC D
nullablemmE M
:mmM N
falsemmO T
)mmT U
,mmU V
UpperPriceBoundnn #
=nn$ %
tablenn& +
.nn+ ,
Columnnn, 2
<nn2 3
intnn3 6
>nn6 7
(nn7 8
typenn8 <
:nn< =
$strnn> C
,nnC D
nullablennE M
:nnM N
falsennO T
)nnT U
,nnU V
AverageRatingoo !
=oo" #
tableoo$ )
.oo) *
Columnoo* 0
<oo0 1
doubleoo1 7
>oo7 8
(oo8 9
typeoo9 =
:oo= >
$stroo? F
,ooF G
nullableooH P
:ooP Q
falseooR W
)ooW X
,ooX Y
RatingCountpp 
=pp  !
tablepp" '
.pp' (
Columnpp( .
<pp. /
intpp/ 2
>pp2 3
(pp3 4
typepp4 8
:pp8 9
$strpp: ?
,pp? @
nullableppA I
:ppI J
falseppK P
)ppP Q
}qq 
,qq 
constraintsrr 
:rr 
tablerr "
=>rr# %
{ss 
tablett 
.tt 

PrimaryKeytt $
(tt$ %
$strtt% 2
,tt2 3
xtt4 5
=>tt6 8
xtt9 :
.tt: ;
Idtt; =
)tt= >
;tt> ?
tableuu 
.uu 

ForeignKeyuu $
(uu$ %
namevv 
:vv 
$strvv 9
,vv9 :
columnww 
:ww 
xww  !
=>ww" $
xww% &
.ww& '
CityIdww' -
,ww- .
principalTablexx &
:xx& '
$strxx( 0
,xx0 1
principalColumnyy '
:yy' (
$stryy) -
,yy- .
onDeletezz  
:zz  !
ReferentialActionzz" 3
.zz3 4
Cascadezz4 ;
)zz; <
;zz< =
table{{ 
.{{ 

ForeignKey{{ $
({{$ %
name|| 
:|| 
$str|| K
,||K L
column}} 
:}} 
x}}  !
=>}}" $
x}}% &
.}}& '
ContractorId}}' 3
,}}3 4
principalTable~~ &
:~~& '
$str~~( <
,~~< =
principalColumn '
:' (
$str) -
,- .
onDelete
ÄÄ  
:
ÄÄ  !
ReferentialAction
ÄÄ" 3
.
ÄÄ3 4
Cascade
ÄÄ4 ;
)
ÄÄ; <
;
ÄÄ< =
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
migrationBuilder
ÉÉ 
.
ÉÉ 
CreateTable
ÉÉ (
(
ÉÉ( )
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
,
ÑÑ 
columns
ÖÖ 
:
ÖÖ 
table
ÖÖ 
=>
ÖÖ !
new
ÖÖ" %
{
ÜÜ 
Id
áá 
=
áá 
table
áá 
.
áá 
Column
áá %
<
áá% &
Guid
áá& *
>
áá* +
(
áá+ ,
type
áá, 0
:
áá0 1
$str
áá2 D
,
ááD E
nullable
ááF N
:
ááN O
false
ááP U
)
ááU V
,
ááV W

CustomerId
àà 
=
àà  
table
àà! &
.
àà& '
Column
àà' -
<
àà- .
Guid
àà. 2
>
àà2 3
(
àà3 4
type
àà4 8
:
àà8 9
$str
àà: L
,
ààL M
nullable
ààN V
:
ààV W
false
ààX ]
)
àà] ^
,
àà^ _
	ServiceId
ââ 
=
ââ 
table
ââ  %
.
ââ% &
Column
ââ& ,
<
ââ, -
Guid
ââ- 1
>
ââ1 2
(
ââ2 3
type
ââ3 7
:
ââ7 8
$str
ââ9 K
,
ââK L
nullable
ââM U
:
ââU V
false
ââW \
)
ââ\ ]
,
ââ] ^
Description
ää 
=
ää  !
table
ää" '
.
ää' (
Column
ää( .
<
ää. /
string
ää/ 5
>
ää5 6
(
ää6 7
type
ää7 ;
:
ää; <
$str
ää= L
,
ääL M
nullable
ääN V
:
ääV W
false
ääX ]
)
ää] ^
,
ää^ _
PaymentAmount
ãã !
=
ãã" #
table
ãã$ )
.
ãã) *
Column
ãã* 0
<
ãã0 1
int
ãã1 4
>
ãã4 5
(
ãã5 6
type
ãã6 :
:
ãã: ;
$str
ãã< A
,
ããA B
nullable
ããC K
:
ããK L
false
ããM R
)
ããR S
,
ããS T
	OrderDate
åå 
=
åå 
table
åå  %
.
åå% &
Column
åå& ,
<
åå, -
DateTime
åå- 5
>
åå5 6
(
åå6 7
type
åå7 ;
:
åå; <
$str
åå= H
,
ååH I
nullable
ååJ R
:
ååR S
false
ååT Y
)
ååY Z
,
ååZ [
OrderStatus
çç 
=
çç  !
table
çç" '
.
çç' (
Column
çç( .
<
çç. /
string
çç/ 5
>
çç5 6
(
çç6 7
type
çç7 ;
:
çç; <
$str
çç= L
,
ççL M
nullable
ççN V
:
ççV W
false
ççX ]
)
çç] ^
,
çç^ _!
CustomerContactType
éé '
=
éé( )
table
éé* /
.
éé/ 0
Column
éé0 6
<
éé6 7
string
éé7 =
>
éé= >
(
éé> ?
type
éé? C
:
ééC D
$str
ééE S
,
ééS T
	maxLength
ééU ^
:
éé^ _
$num
éé` b
,
ééb c
nullable
ééd l
:
éél m
false
één s
)
éés t
,
éét u"
CustomerContactValue
èè (
=
èè) *
table
èè+ 0
.
èè0 1
Column
èè1 7
<
èè7 8
string
èè8 >
>
èè> ?
(
èè? @
type
èè@ D
:
èèD E
$str
èèF U
,
èèU V
	maxLength
èèW `
:
èè` a
$num
èèb e
,
èèe f
nullable
èèg o
:
èèo p
false
èèq v
)
èèv w
,
èèw x#
ContractorContactType
êê )
=
êê* +
table
êê, 1
.
êê1 2
Column
êê2 8
<
êê8 9
string
êê9 ?
>
êê? @
(
êê@ A
type
êêA E
:
êêE F
$str
êêG U
,
êêU V
	maxLength
êêW `
:
êê` a
$num
êêb d
,
êêd e
nullable
êêf n
:
êên o
false
êêp u
)
êêu v
,
êêv w$
ContractorContactValue
ëë *
=
ëë+ ,
table
ëë- 2
.
ëë2 3
Column
ëë3 9
<
ëë9 :
string
ëë: @
>
ëë@ A
(
ëëA B
type
ëëB F
:
ëëF G
$str
ëëH W
,
ëëW X
	maxLength
ëëY b
:
ëëb c
$num
ëëd g
,
ëëg h
nullable
ëëi q
:
ëëq r
false
ëës x
)
ëëx y
}
íí 
,
íí 
constraints
ìì 
:
ìì 
table
ìì "
=>
ìì# %
{
îî 
table
ïï 
.
ïï 

PrimaryKey
ïï $
(
ïï$ %
$str
ïï% 0
,
ïï0 1
x
ïï2 3
=>
ïï4 6
x
ïï7 8
.
ïï8 9
Id
ïï9 ;
)
ïï; <
;
ïï< =
table
ññ 
.
ññ 

ForeignKey
ññ $
(
ññ$ %
name
óó 
:
óó 
$str
óó <
,
óó< =
column
òò 
:
òò 
x
òò  !
=>
òò" $
x
òò% &
.
òò& '
	ServiceId
òò' 0
,
òò0 1
principalTable
ôô &
:
ôô& '
$str
ôô( 2
,
ôô2 3
principalColumn
öö '
:
öö' (
$str
öö) -
,
öö- .
onDelete
õõ  
:
õõ  !
ReferentialAction
õõ" 3
.
õõ3 4
Cascade
õõ4 ;
)
õõ; <
;
õõ< =
table
úú 
.
úú 

ForeignKey
úú $
(
úú$ %
name
ùù 
:
ùù 
$str
ùù :
,
ùù: ;
column
ûû 
:
ûû 
x
ûû  !
=>
ûû" $
x
ûû% &
.
ûû& '

CustomerId
ûû' 1
,
ûû1 2
principalTable
üü &
:
üü& '
$str
üü( /
,
üü/ 0
principalColumn
†† '
:
††' (
$str
††) -
,
††- .
onDelete
°°  
:
°°  !
ReferentialAction
°°" 3
.
°°3 4
Cascade
°°4 ;
)
°°; <
;
°°< =
}
¢¢ 
)
¢¢ 
;
¢¢ 
migrationBuilder
§§ 
.
§§ 
CreateTable
§§ (
(
§§( )
name
•• 
:
•• 
$str
••  
,
••  !
columns
¶¶ 
:
¶¶ 
table
¶¶ 
=>
¶¶ !
new
¶¶" %
{
ßß 
Id
®® 
=
®® 
table
®® 
.
®® 
Column
®® %
<
®®% &
Guid
®®& *
>
®®* +
(
®®+ ,
type
®®, 0
:
®®0 1
$str
®®2 D
,
®®D E
nullable
®®F N
:
®®N O
false
®®P U
)
®®U V
,
®®V W

CustomerId
©© 
=
©©  
table
©©! &
.
©©& '
Column
©©' -
<
©©- .
Guid
©©. 2
>
©©2 3
(
©©3 4
type
©©4 8
:
©©8 9
$str
©©: L
,
©©L M
nullable
©©N V
:
©©V W
false
©©X ]
)
©©] ^
,
©©^ _
	ServiceId
™™ 
=
™™ 
table
™™  %
.
™™% &
Column
™™& ,
<
™™, -
Guid
™™- 1
>
™™1 2
(
™™2 3
type
™™3 7
:
™™7 8
$str
™™9 K
,
™™K L
nullable
™™M U
:
™™U V
false
™™W \
)
™™\ ]
,
™™] ^
Description
´´ 
=
´´  !
table
´´" '
.
´´' (
Column
´´( .
<
´´. /
string
´´/ 5
>
´´5 6
(
´´6 7
type
´´7 ;
:
´´; <
$str
´´= L
,
´´L M
nullable
´´N V
:
´´V W
false
´´X ]
)
´´] ^
,
´´^ _
PaymentAmount
¨¨ !
=
¨¨" #
table
¨¨$ )
.
¨¨) *
Column
¨¨* 0
<
¨¨0 1
int
¨¨1 4
>
¨¨4 5
(
¨¨5 6
type
¨¨6 :
:
¨¨: ;
$str
¨¨< A
,
¨¨A B
nullable
¨¨C K
:
¨¨K L
false
¨¨M R
)
¨¨R S
,
¨¨S T
RequestDate
≠≠ 
=
≠≠  !
table
≠≠" '
.
≠≠' (
Column
≠≠( .
<
≠≠. /
DateTime
≠≠/ 7
>
≠≠7 8
(
≠≠8 9
type
≠≠9 =
:
≠≠= >
$str
≠≠? J
,
≠≠J K
nullable
≠≠L T
:
≠≠T U
false
≠≠V [
)
≠≠[ \
,
≠≠\ ]
RequestStatus
ÆÆ !
=
ÆÆ" #
table
ÆÆ$ )
.
ÆÆ) *
Column
ÆÆ* 0
<
ÆÆ0 1
string
ÆÆ1 7
>
ÆÆ7 8
(
ÆÆ8 9
type
ÆÆ9 =
:
ÆÆ= >
$str
ÆÆ? N
,
ÆÆN O
nullable
ÆÆP X
:
ÆÆX Y
false
ÆÆZ _
)
ÆÆ_ `
,
ÆÆ` a!
CustomerContactType
ØØ '
=
ØØ( )
table
ØØ* /
.
ØØ/ 0
Column
ØØ0 6
<
ØØ6 7
string
ØØ7 =
>
ØØ= >
(
ØØ> ?
type
ØØ? C
:
ØØC D
$str
ØØE S
,
ØØS T
	maxLength
ØØU ^
:
ØØ^ _
$num
ØØ` b
,
ØØb c
nullable
ØØd l
:
ØØl m
false
ØØn s
)
ØØs t
,
ØØt u"
CustomerContactValue
∞∞ (
=
∞∞) *
table
∞∞+ 0
.
∞∞0 1
Column
∞∞1 7
<
∞∞7 8
string
∞∞8 >
>
∞∞> ?
(
∞∞? @
type
∞∞@ D
:
∞∞D E
$str
∞∞F U
,
∞∞U V
	maxLength
∞∞W `
:
∞∞` a
$num
∞∞b e
,
∞∞e f
nullable
∞∞g o
:
∞∞o p
false
∞∞q v
)
∞∞v w
,
∞∞w x#
ContractorContactType
±± )
=
±±* +
table
±±, 1
.
±±1 2
Column
±±2 8
<
±±8 9
string
±±9 ?
>
±±? @
(
±±@ A
type
±±A E
:
±±E F
$str
±±G U
,
±±U V
	maxLength
±±W `
:
±±` a
$num
±±b d
,
±±d e
nullable
±±f n
:
±±n o
false
±±p u
)
±±u v
,
±±v w$
ContractorContactValue
≤≤ *
=
≤≤+ ,
table
≤≤- 2
.
≤≤2 3
Column
≤≤3 9
<
≤≤9 :
string
≤≤: @
>
≤≤@ A
(
≤≤A B
type
≤≤B F
:
≤≤F G
$str
≤≤H W
,
≤≤W X
	maxLength
≤≤Y b
:
≤≤b c
$num
≤≤d g
,
≤≤g h
nullable
≤≤i q
:
≤≤q r
false
≤≤s x
)
≤≤x y
}
≥≥ 
,
≥≥ 
constraints
¥¥ 
:
¥¥ 
table
¥¥ "
=>
¥¥# %
{
µµ 
table
∂∂ 
.
∂∂ 

PrimaryKey
∂∂ $
(
∂∂$ %
$str
∂∂% 2
,
∂∂2 3
x
∂∂4 5
=>
∂∂6 8
x
∂∂9 :
.
∂∂: ;
Id
∂∂; =
)
∂∂= >
;
∂∂> ?
table
∑∑ 
.
∑∑ 

ForeignKey
∑∑ $
(
∑∑$ %
name
∏∏ 
:
∏∏ 
$str
∏∏ >
,
∏∏> ?
column
ππ 
:
ππ 
x
ππ  !
=>
ππ" $
x
ππ% &
.
ππ& '
	ServiceId
ππ' 0
,
ππ0 1
principalTable
∫∫ &
:
∫∫& '
$str
∫∫( 2
,
∫∫2 3
principalColumn
ªª '
:
ªª' (
$str
ªª) -
,
ªª- .
onDelete
ºº  
:
ºº  !
ReferentialAction
ºº" 3
.
ºº3 4
Cascade
ºº4 ;
)
ºº; <
;
ºº< =
table
ΩΩ 
.
ΩΩ 

ForeignKey
ΩΩ $
(
ΩΩ$ %
name
ææ 
:
ææ 
$str
ææ <
,
ææ< =
column
øø 
:
øø 
x
øø  !
=>
øø" $
x
øø% &
.
øø& '

CustomerId
øø' 1
,
øø1 2
principalTable
¿¿ &
:
¿¿& '
$str
¿¿( /
,
¿¿/ 0
principalColumn
¡¡ '
:
¡¡' (
$str
¡¡) -
,
¡¡- .
onDelete
¬¬  
:
¬¬  !
ReferentialAction
¬¬" 3
.
¬¬3 4
Cascade
¬¬4 ;
)
¬¬; <
;
¬¬< =
}
√√ 
)
√√ 
;
√√ 
migrationBuilder
≈≈ 
.
≈≈ 
CreateTable
≈≈ (
(
≈≈( )
name
∆∆ 
:
∆∆ 
$str
∆∆ 
,
∆∆  
columns
«« 
:
«« 
table
«« 
=>
«« !
new
««" %
{
»» 
Id
…… 
=
…… 
table
…… 
.
…… 
Column
…… %
<
……% &
Guid
……& *
>
……* +
(
……+ ,
type
……, 0
:
……0 1
$str
……2 D
,
……D E
nullable
……F N
:
……N O
false
……P U
)
……U V
,
……V W
	ServiceId
   
=
   
table
    %
.
  % &
Column
  & ,
<
  , -
Guid
  - 1
>
  1 2
(
  2 3
type
  3 7
:
  7 8
$str
  9 K
,
  K L
nullable
  M U
:
  U V
false
  W \
)
  \ ]
,
  ] ^
UserId
ÀÀ 
=
ÀÀ 
table
ÀÀ "
.
ÀÀ" #
Column
ÀÀ# )
<
ÀÀ) *
Guid
ÀÀ* .
>
ÀÀ. /
(
ÀÀ/ 0
type
ÀÀ0 4
:
ÀÀ4 5
$str
ÀÀ6 H
,
ÀÀH I
nullable
ÀÀJ R
:
ÀÀR S
false
ÀÀT Y
)
ÀÀY Z
,
ÀÀZ [
Rating
ÃÃ 
=
ÃÃ 
table
ÃÃ "
.
ÃÃ" #
Column
ÃÃ# )
<
ÃÃ) *
int
ÃÃ* -
>
ÃÃ- .
(
ÃÃ. /
type
ÃÃ/ 3
:
ÃÃ3 4
$str
ÃÃ5 :
,
ÃÃ: ;
nullable
ÃÃ< D
:
ÃÃD E
false
ÃÃF K
)
ÃÃK L
,
ÃÃL M
Text
ÕÕ 
=
ÕÕ 
table
ÕÕ  
.
ÕÕ  !
Column
ÕÕ! '
<
ÕÕ' (
string
ÕÕ( .
>
ÕÕ. /
(
ÕÕ/ 0
type
ÕÕ0 4
:
ÕÕ4 5
$str
ÕÕ6 E
,
ÕÕE F
	maxLength
ÕÕG P
:
ÕÕP Q
$num
ÕÕR U
,
ÕÕU V
nullable
ÕÕW _
:
ÕÕ_ `
false
ÕÕa f
)
ÕÕf g
,
ÕÕg h
	CreatedAt
ŒŒ 
=
ŒŒ 
table
ŒŒ  %
.
ŒŒ% &
Column
ŒŒ& ,
<
ŒŒ, -
DateTime
ŒŒ- 5
>
ŒŒ5 6
(
ŒŒ6 7
type
ŒŒ7 ;
:
ŒŒ; <
$str
ŒŒ= H
,
ŒŒH I
nullable
ŒŒJ R
:
ŒŒR S
false
ŒŒT Y
)
ŒŒY Z
}
œœ 
,
œœ 
constraints
–– 
:
–– 
table
–– "
=>
––# %
{
—— 
table
““ 
.
““ 

PrimaryKey
““ $
(
““$ %
$str
““% 1
,
““1 2
x
““3 4
=>
““5 7
x
““8 9
.
““9 :
Id
““: <
)
““< =
;
““= >
table
”” 
.
”” 

ForeignKey
”” $
(
””$ %
name
‘‘ 
:
‘‘ 
$str
‘‘ =
,
‘‘= >
column
’’ 
:
’’ 
x
’’  !
=>
’’" $
x
’’% &
.
’’& '
	ServiceId
’’' 0
,
’’0 1
principalTable
÷÷ &
:
÷÷& '
$str
÷÷( 2
,
÷÷2 3
principalColumn
◊◊ '
:
◊◊' (
$str
◊◊) -
,
◊◊- .
onDelete
ÿÿ  
:
ÿÿ  !
ReferentialAction
ÿÿ" 3
.
ÿÿ3 4
Cascade
ÿÿ4 ;
)
ÿÿ; <
;
ÿÿ< =
table
ŸŸ 
.
ŸŸ 

ForeignKey
ŸŸ $
(
ŸŸ$ %
name
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ 7
,
⁄⁄7 8
column
€€ 
:
€€ 
x
€€  !
=>
€€" $
x
€€% &
.
€€& '
UserId
€€' -
,
€€- .
principalTable
‹‹ &
:
‹‹& '
$str
‹‹( /
,
‹‹/ 0
principalColumn
›› '
:
››' (
$str
››) -
,
››- .
onDelete
ﬁﬁ  
:
ﬁﬁ  !
ReferentialAction
ﬁﬁ" 3
.
ﬁﬁ3 4
Cascade
ﬁﬁ4 ;
)
ﬁﬁ; <
;
ﬁﬁ< =
}
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
migrationBuilder
·· 
.
·· 

InsertData
·· '
(
··' (
table
‚‚ 
:
‚‚ 
$str
‚‚  
,
‚‚  !
columns
„„ 
:
„„ 
new
„„ 
[
„„ 
]
„„ 
{
„„  
$str
„„! %
,
„„% &
$str
„„' -
}
„„. /
,
„„/ 0
values
‰‰ 
:
‰‰ 
new
‰‰ 
object
‰‰ "
[
‰‰" #
,
‰‰# $
]
‰‰$ %
{
ÂÂ 
{
ÊÊ 
new
ÊÊ 
Guid
ÊÊ 
(
ÊÊ 
$str
ÊÊ E
)
ÊÊE F
,
ÊÊF G
$str
ÊÊH \
}
ÊÊ] ^
,
ÊÊ^ _
{
ÁÁ 
new
ÁÁ 
Guid
ÁÁ 
(
ÁÁ 
$str
ÁÁ E
)
ÁÁE F
,
ÁÁF G
$str
ÁÁH [
}
ÁÁ\ ]
,
ÁÁ] ^
{
ËË 
new
ËË 
Guid
ËË 
(
ËË 
$str
ËË E
)
ËËE F
,
ËËF G
$str
ËËH ]
}
ËË^ _
,
ËË_ `
{
ÈÈ 
new
ÈÈ 
Guid
ÈÈ 
(
ÈÈ 
$str
ÈÈ E
)
ÈÈE F
,
ÈÈF G
$str
ÈÈH W
}
ÈÈX Y
,
ÈÈY Z
{
ÍÍ 
new
ÍÍ 
Guid
ÍÍ 
(
ÍÍ 
$str
ÍÍ E
)
ÍÍE F
,
ÍÍF G
$str
ÍÍH [
}
ÍÍ\ ]
,
ÍÍ] ^
{
ÎÎ 
new
ÎÎ 
Guid
ÎÎ 
(
ÎÎ 
$str
ÎÎ E
)
ÎÎE F
,
ÎÎF G
$str
ÎÎH a
}
ÎÎb c
,
ÎÎc d
{
ÏÏ 
new
ÏÏ 
Guid
ÏÏ 
(
ÏÏ 
$str
ÏÏ E
)
ÏÏE F
,
ÏÏF G
$str
ÏÏH \
}
ÏÏ] ^
,
ÏÏ^ _
{
ÌÌ 
new
ÌÌ 
Guid
ÌÌ 
(
ÌÌ 
$str
ÌÌ E
)
ÌÌE F
,
ÌÌF G
$str
ÌÌH \
}
ÌÌ] ^
,
ÌÌ^ _
{
ÓÓ 
new
ÓÓ 
Guid
ÓÓ 
(
ÓÓ 
$str
ÓÓ E
)
ÓÓE F
,
ÓÓF G
$str
ÓÓH Z
}
ÓÓ[ \
,
ÓÓ\ ]
{
ÔÔ 
new
ÔÔ 
Guid
ÔÔ 
(
ÔÔ 
$str
ÔÔ E
)
ÔÔE F
,
ÔÔF G
$str
ÔÔH `
}
ÔÔa b
,
ÔÔb c
{
 
new
 
Guid
 
(
 
$str
 E
)
E F
,
F G
$str
H W
}
X Y
,
Y Z
{
ÒÒ 
new
ÒÒ 
Guid
ÒÒ 
(
ÒÒ 
$str
ÒÒ E
)
ÒÒE F
,
ÒÒF G
$str
ÒÒH X
}
ÒÒY Z
,
ÒÒZ [
{
ÚÚ 
new
ÚÚ 
Guid
ÚÚ 
(
ÚÚ 
$str
ÚÚ E
)
ÚÚE F
,
ÚÚF G
$str
ÚÚH Y
}
ÚÚZ [
,
ÚÚ[ \
{
ÛÛ 
new
ÛÛ 
Guid
ÛÛ 
(
ÛÛ 
$str
ÛÛ E
)
ÛÛE F
,
ÛÛF G
$str
ÛÛH \
}
ÛÛ] ^
,
ÛÛ^ _
{
ÙÙ 
new
ÙÙ 
Guid
ÙÙ 
(
ÙÙ 
$str
ÙÙ E
)
ÙÙE F
,
ÙÙF G
$str
ÙÙH ^
}
ÙÙ_ `
,
ÙÙ` a
{
ıı 
new
ıı 
Guid
ıı 
(
ıı 
$str
ıı E
)
ııE F
,
ııF G
$str
ııH ]
}
ıı^ _
,
ıı_ `
{
ˆˆ 
new
ˆˆ 
Guid
ˆˆ 
(
ˆˆ 
$str
ˆˆ E
)
ˆˆE F
,
ˆˆF G
$str
ˆˆH [
}
ˆˆ\ ]
,
ˆˆ] ^
{
˜˜ 
new
˜˜ 
Guid
˜˜ 
(
˜˜ 
$str
˜˜ E
)
˜˜E F
,
˜˜F G
$str
˜˜H \
}
˜˜] ^
,
˜˜^ _
{
¯¯ 
new
¯¯ 
Guid
¯¯ 
(
¯¯ 
$str
¯¯ E
)
¯¯E F
,
¯¯F G
$str
¯¯H d
}
¯¯e f
,
¯¯f g
{
˘˘ 
new
˘˘ 
Guid
˘˘ 
(
˘˘ 
$str
˘˘ E
)
˘˘E F
,
˘˘F G
$str
˘˘H Y
}
˘˘Z [
,
˘˘[ \
{
˙˙ 
new
˙˙ 
Guid
˙˙ 
(
˙˙ 
$str
˙˙ E
)
˙˙E F
,
˙˙F G
$str
˙˙H Y
}
˙˙Z [
,
˙˙[ \
{
˚˚ 
new
˚˚ 
Guid
˚˚ 
(
˚˚ 
$str
˚˚ E
)
˚˚E F
,
˚˚F G
$str
˚˚H U
}
˚˚V W
,
˚˚W X
{
¸¸ 
new
¸¸ 
Guid
¸¸ 
(
¸¸ 
$str
¸¸ E
)
¸¸E F
,
¸¸F G
$str
¸¸H Z
}
¸¸[ \
,
¸¸\ ]
{
˝˝ 
new
˝˝ 
Guid
˝˝ 
(
˝˝ 
$str
˝˝ E
)
˝˝E F
,
˝˝F G
$str
˝˝H Z
}
˝˝[ \
,
˝˝\ ]
{
˛˛ 
new
˛˛ 
Guid
˛˛ 
(
˛˛ 
$str
˛˛ E
)
˛˛E F
,
˛˛F G
$str
˛˛H Z
}
˛˛[ \
,
˛˛\ ]
{
ˇˇ 
new
ˇˇ 
Guid
ˇˇ 
(
ˇˇ 
$str
ˇˇ E
)
ˇˇE F
,
ˇˇF G
$str
ˇˇH Z
}
ˇˇ[ \
,
ˇˇ\ ]
{
ÄÄ 
new
ÄÄ 
Guid
ÄÄ 
(
ÄÄ 
$str
ÄÄ E
)
ÄÄE F
,
ÄÄF G
$str
ÄÄH X
}
ÄÄY Z
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
migrationBuilder
ÉÉ 
.
ÉÉ 

InsertData
ÉÉ '
(
ÉÉ' (
table
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
,
ÑÑ  
columns
ÖÖ 
:
ÖÖ 
new
ÖÖ 
[
ÖÖ 
]
ÖÖ 
{
ÖÖ  
$str
ÖÖ! %
,
ÖÖ% &
$str
ÖÖ' -
,
ÖÖ- .
$str
ÖÖ/ 9
}
ÖÖ: ;
,
ÖÖ; <
values
ÜÜ 
:
ÜÜ 
new
ÜÜ 
object
ÜÜ "
[
ÜÜ" #
,
ÜÜ# $
]
ÜÜ$ %
{
áá 
{
àà 
new
àà 
Guid
àà 
(
àà 
$str
àà E
)
ààE F
,
ààF G
$str
ààH R
,
ààR S
new
ààT W
Guid
ààX \
(
àà\ ]
$stràà] É
)ààÉ Ñ
}ààÖ Ü
,ààÜ á
{
ââ 
new
ââ 
Guid
ââ 
(
ââ 
$str
ââ E
)
ââE F
,
ââF G
$str
ââH R
,
ââR S
new
ââT W
Guid
ââX \
(
ââ\ ]
$strââ] É
)ââÉ Ñ
}ââÖ Ü
,ââÜ á
{
ää 
new
ää 
Guid
ää 
(
ää 
$str
ää E
)
ääE F
,
ääF G
$str
ääH O
,
ääO P
new
ääQ T
Guid
ääU Y
(
ääY Z
$strääZ Ä
)ääÄ Å
}ääÇ É
,ääÉ Ñ
{
ãã 
new
ãã 
Guid
ãã 
(
ãã 
$str
ãã E
)
ããE F
,
ããF G
$str
ããH V
,
ããV W
new
ããX [
Guid
ãã\ `
(
ãã` a
$strããa á
)ããá à
}ããâ ä
,ããä ã
{
åå 
new
åå 
Guid
åå 
(
åå 
$str
åå E
)
ååE F
,
ååF G
$str
ååH T
,
ååT U
new
ååV Y
Guid
ååZ ^
(
åå^ _
$stråå_ Ö
)ååÖ Ü
}ååá à
,ååà â
{
çç 
new
çç 
Guid
çç 
(
çç 
$str
çç E
)
ççE F
,
ççF G
$str
ççH Q
,
ççQ R
new
ççS V
Guid
ççW [
(
çç[ \
$strçç\ Ç
)ççÇ É
}ççÑ Ö
,ççÖ Ü
{
éé 
new
éé 
Guid
éé 
(
éé 
$str
éé E
)
ééE F
,
ééF G
$str
ééH S
,
ééS T
new
ééU X
Guid
ééY ]
(
éé] ^
$stréé^ Ñ
)ééÑ Ö
}ééÜ á
,ééá à
{
èè 
new
èè 
Guid
èè 
(
èè 
$str
èè E
)
èèE F
,
èèF G
$str
èèH R
,
èèR S
new
èèT W
Guid
èèX \
(
èè\ ]
$strèè] É
)èèÉ Ñ
}èèÖ Ü
,èèÜ á
{
êê 
new
êê 
Guid
êê 
(
êê 
$str
êê E
)
êêE F
,
êêF G
$str
êêH P
,
êêP Q
new
êêR U
Guid
êêV Z
(
êêZ [
$strêê[ Å
)êêÅ Ç
}êêÉ Ñ
,êêÑ Ö
{
ëë 
new
ëë 
Guid
ëë 
(
ëë 
$str
ëë E
)
ëëE F
,
ëëF G
$str
ëëH R
,
ëëR S
new
ëëT W
Guid
ëëX \
(
ëë\ ]
$strëë] É
)ëëÉ Ñ
}ëëÖ Ü
,ëëÜ á
{
íí 
new
íí 
Guid
íí 
(
íí 
$str
íí E
)
ííE F
,
ííF G
$str
ííH Q
,
ííQ R
new
ííS V
Guid
ííW [
(
íí[ \
$stríí\ Ç
)ííÇ É
}ííÑ Ö
,ííÖ Ü
{
ìì 
new
ìì 
Guid
ìì 
(
ìì 
$str
ìì E
)
ììE F
,
ììF G
$str
ììH R
,
ììR S
new
ììT W
Guid
ììX \
(
ìì\ ]
$strìì] É
)ììÉ Ñ
}ììÖ Ü
,ììÜ á
{
îî 
new
îî 
Guid
îî 
(
îî 
$str
îî E
)
îîE F
,
îîF G
$str
îîH U
,
îîU V
new
îîW Z
Guid
îî[ _
(
îî_ `
$strîî` Ü
)îîÜ á
}îîà â
,îîâ ä
{
ïï 
new
ïï 
Guid
ïï 
(
ïï 
$str
ïï E
)
ïïE F
,
ïïF G
$str
ïïH \
,
ïï\ ]
new
ïï^ a
Guid
ïïb f
(
ïïf g
$strïïg ç
)ïïç é
}ïïè ê
,ïïê ë
{
ññ 
new
ññ 
Guid
ññ 
(
ññ 
$str
ññ E
)
ññE F
,
ññF G
$str
ññH R
,
ññR S
new
ññT W
Guid
ññX \
(
ññ\ ]
$strññ] É
)ññÉ Ñ
}ññÖ Ü
,ññÜ á
{
óó 
new
óó 
Guid
óó 
(
óó 
$str
óó E
)
óóE F
,
óóF G
$str
óóH S
,
óóS T
new
óóU X
Guid
óóY ]
(
óó] ^
$stróó^ Ñ
)óóÑ Ö
}óóÜ á
,óóá à
{
òò 
new
òò 
Guid
òò 
(
òò 
$str
òò E
)
òòE F
,
òòF G
$str
òòH Y
,
òòY Z
new
òò[ ^
Guid
òò_ c
(
òòc d
$stròòd ä
)òòä ã
}òòå ç
,òòç é
{
ôô 
new
ôô 
Guid
ôô 
(
ôô 
$str
ôô E
)
ôôE F
,
ôôF G
$str
ôôH U
,
ôôU V
new
ôôW Z
Guid
ôô[ _
(
ôô_ `
$strôô` Ü
)ôôÜ á
}ôôà â
,ôôâ ä
{
öö 
new
öö 
Guid
öö 
(
öö 
$str
öö E
)
ööE F
,
ööF G
$str
ööH V
,
ööV W
new
ööX [
Guid
öö\ `
(
öö` a
$strööa á
)ööá à
}ööâ ä
,ööä ã
{
õõ 
new
õõ 
Guid
õõ 
(
õõ 
$str
õõ E
)
õõE F
,
õõF G
$str
õõH T
,
õõT U
new
õõV Y
Guid
õõZ ^
(
õõ^ _
$strõõ_ Ö
)õõÖ Ü
}õõá à
,õõà â
{
úú 
new
úú 
Guid
úú 
(
úú 
$str
úú E
)
úúE F
,
úúF G
$str
úúH X
,
úúX Y
new
úúZ ]
Guid
úú^ b
(
úúb c
$strúúc â
)úúâ ä
}úúã å
,úúå ç
{
ùù 
new
ùù 
Guid
ùù 
(
ùù 
$str
ùù E
)
ùùE F
,
ùùF G
$str
ùùH V
,
ùùV W
new
ùùX [
Guid
ùù\ `
(
ùù` a
$strùùa á
)ùùá à
}ùùâ ä
,ùùä ã
{
ûû 
new
ûû 
Guid
ûû 
(
ûû 
$str
ûû E
)
ûûE F
,
ûûF G
$str
ûûH X
,
ûûX Y
new
ûûZ ]
Guid
ûû^ b
(
ûûb c
$strûûc â
)ûûâ ä
}ûûã å
,ûûå ç
{
üü 
new
üü 
Guid
üü 
(
üü 
$str
üü E
)
üüE F
,
üüF G
$str
üüH W
,
üüW X
new
üüY \
Guid
üü] a
(
üüa b
$strüüb à
)üüà â
}üüä ã
,üüã å
{
†† 
new
†† 
Guid
†† 
(
†† 
$str
†† E
)
††E F
,
††F G
$str
††H U
,
††U V
new
††W Z
Guid
††[ _
(
††_ `
$str††` Ü
)††Ü á
}††à â
,††â ä
{
°° 
new
°° 
Guid
°° 
(
°° 
$str
°° E
)
°°E F
,
°°F G
$str
°°H `
,
°°` a
new
°°b e
Guid
°°f j
(
°°j k
$str°°k ë
)°°ë í
}°°ì î
,°°î ï
{
¢¢ 
new
¢¢ 
Guid
¢¢ 
(
¢¢ 
$str
¢¢ E
)
¢¢E F
,
¢¢F G
$str
¢¢H R
,
¢¢R S
new
¢¢T W
Guid
¢¢X \
(
¢¢\ ]
$str¢¢] É
)¢¢É Ñ
}¢¢Ö Ü
,¢¢Ü á
{
££ 
new
££ 
Guid
££ 
(
££ 
$str
££ E
)
££E F
,
££F G
$str
££H S
,
££S T
new
££U X
Guid
££Y ]
(
££] ^
$str££^ Ñ
)££Ñ Ö
}££Ü á
,££á à
{
§§ 
new
§§ 
Guid
§§ 
(
§§ 
$str
§§ E
)
§§E F
,
§§F G
$str
§§H O
,
§§O P
new
§§Q T
Guid
§§U Y
(
§§Y Z
$str§§Z Ä
)§§Ä Å
}§§Ç É
,§§É Ñ
{
•• 
new
•• 
Guid
•• 
(
•• 
$str
•• E
)
••E F
,
••F G
$str
••H T
,
••T U
new
••V Y
Guid
••Z ^
(
••^ _
$str••_ Ö
)••Ö Ü
}••á à
,••à â
{
¶¶ 
new
¶¶ 
Guid
¶¶ 
(
¶¶ 
$str
¶¶ E
)
¶¶E F
,
¶¶F G
$str
¶¶H R
,
¶¶R S
new
¶¶T W
Guid
¶¶X \
(
¶¶\ ]
$str¶¶] É
)¶¶É Ñ
}¶¶Ö Ü
,¶¶Ü á
{
ßß 
new
ßß 
Guid
ßß 
(
ßß 
$str
ßß E
)
ßßE F
,
ßßF G
$str
ßßH R
,
ßßR S
new
ßßT W
Guid
ßßX \
(
ßß\ ]
$strßß] É
)ßßÉ Ñ
}ßßÖ Ü
,ßßÜ á
{
®® 
new
®® 
Guid
®® 
(
®® 
$str
®® E
)
®®E F
,
®®F G
$str
®®H R
,
®®R S
new
®®T W
Guid
®®X \
(
®®\ ]
$str®®] É
)®®É Ñ
}®®Ö Ü
,®®Ü á
{
©© 
new
©© 
Guid
©© 
(
©© 
$str
©© E
)
©©E F
,
©©F G
$str
©©H P
,
©©P Q
new
©©R U
Guid
©©V Z
(
©©Z [
$str©©[ Å
)©©Å Ç
}©©É Ñ
,©©Ñ Ö
{
™™ 
new
™™ 
Guid
™™ 
(
™™ 
$str
™™ E
)
™™E F
,
™™F G
$str
™™H R
,
™™R S
new
™™T W
Guid
™™X \
(
™™\ ]
$str™™] É
)™™É Ñ
}™™Ö Ü
,™™Ü á
{
´´ 
new
´´ 
Guid
´´ 
(
´´ 
$str
´´ E
)
´´E F
,
´´F G
$str
´´H Y
,
´´Y Z
new
´´[ ^
Guid
´´_ c
(
´´c d
$str´´d ä
)´´ä ã
}´´å ç
,´´ç é
{
¨¨ 
new
¨¨ 
Guid
¨¨ 
(
¨¨ 
$str
¨¨ E
)
¨¨E F
,
¨¨F G
$str
¨¨H Y
,
¨¨Y Z
new
¨¨[ ^
Guid
¨¨_ c
(
¨¨c d
$str¨¨d ä
)¨¨ä ã
}¨¨å ç
,¨¨ç é
{
≠≠ 
new
≠≠ 
Guid
≠≠ 
(
≠≠ 
$str
≠≠ E
)
≠≠E F
,
≠≠F G
$str
≠≠H Q
,
≠≠Q R
new
≠≠S V
Guid
≠≠W [
(
≠≠[ \
$str≠≠\ Ç
)≠≠Ç É
}≠≠Ñ Ö
,≠≠Ö Ü
{
ÆÆ 
new
ÆÆ 
Guid
ÆÆ 
(
ÆÆ 
$str
ÆÆ E
)
ÆÆE F
,
ÆÆF G
$str
ÆÆH S
,
ÆÆS T
new
ÆÆU X
Guid
ÆÆY ]
(
ÆÆ] ^
$strÆÆ^ Ñ
)ÆÆÑ Ö
}ÆÆÜ á
,ÆÆá à
{
ØØ 
new
ØØ 
Guid
ØØ 
(
ØØ 
$str
ØØ E
)
ØØE F
,
ØØF G
$str
ØØH T
,
ØØT U
new
ØØV Y
Guid
ØØZ ^
(
ØØ^ _
$strØØ_ Ö
)ØØÖ Ü
}ØØá à
,ØØà â
{
∞∞ 
new
∞∞ 
Guid
∞∞ 
(
∞∞ 
$str
∞∞ E
)
∞∞E F
,
∞∞F G
$str
∞∞H V
,
∞∞V W
new
∞∞X [
Guid
∞∞\ `
(
∞∞` a
$str∞∞a á
)∞∞á à
}∞∞â ä
,∞∞ä ã
{
±± 
new
±± 
Guid
±± 
(
±± 
$str
±± E
)
±±E F
,
±±F G
$str
±±H R
,
±±R S
new
±±T W
Guid
±±X \
(
±±\ ]
$str±±] É
)±±É Ñ
}±±Ö Ü
,±±Ü á
{
≤≤ 
new
≤≤ 
Guid
≤≤ 
(
≤≤ 
$str
≤≤ E
)
≤≤E F
,
≤≤F G
$str
≤≤H U
,
≤≤U V
new
≤≤W Z
Guid
≤≤[ _
(
≤≤_ `
$str≤≤` Ü
)≤≤Ü á
}≤≤à â
,≤≤â ä
{
≥≥ 
new
≥≥ 
Guid
≥≥ 
(
≥≥ 
$str
≥≥ E
)
≥≥E F
,
≥≥F G
$str
≥≥H V
,
≥≥V W
new
≥≥X [
Guid
≥≥\ `
(
≥≥` a
$str≥≥a á
)≥≥á à
}≥≥â ä
,≥≥ä ã
{
¥¥ 
new
¥¥ 
Guid
¥¥ 
(
¥¥ 
$str
¥¥ E
)
¥¥E F
,
¥¥F G
$str
¥¥H T
,
¥¥T U
new
¥¥V Y
Guid
¥¥Z ^
(
¥¥^ _
$str¥¥_ Ö
)¥¥Ö Ü
}¥¥á à
,¥¥à â
{
µµ 
new
µµ 
Guid
µµ 
(
µµ 
$str
µµ E
)
µµE F
,
µµF G
$str
µµH Q
,
µµQ R
new
µµS V
Guid
µµW [
(
µµ[ \
$strµµ\ Ç
)µµÇ É
}µµÑ Ö
,µµÖ Ü
{
∂∂ 
new
∂∂ 
Guid
∂∂ 
(
∂∂ 
$str
∂∂ E
)
∂∂E F
,
∂∂F G
$str
∂∂H c
,
∂∂c d
new
∂∂e h
Guid
∂∂i m
(
∂∂m n
$str∂∂n î
)∂∂î ï
}∂∂ñ ó
,∂∂ó ò
{
∑∑ 
new
∑∑ 
Guid
∑∑ 
(
∑∑ 
$str
∑∑ E
)
∑∑E F
,
∑∑F G
$str
∑∑H S
,
∑∑S T
new
∑∑U X
Guid
∑∑Y ]
(
∑∑] ^
$str∑∑^ Ñ
)∑∑Ñ Ö
}∑∑Ü á
,∑∑á à
{
∏∏ 
new
∏∏ 
Guid
∏∏ 
(
∏∏ 
$str
∏∏ E
)
∏∏E F
,
∏∏F G
$str
∏∏H P
,
∏∏P Q
new
∏∏R U
Guid
∏∏V Z
(
∏∏Z [
$str∏∏[ Å
)∏∏Å Ç
}∏∏É Ñ
,∏∏Ñ Ö
{
ππ 
new
ππ 
Guid
ππ 
(
ππ 
$str
ππ E
)
ππE F
,
ππF G
$str
ππH T
,
ππT U
new
ππV Y
Guid
ππZ ^
(
ππ^ _
$strππ_ Ö
)ππÖ Ü
}ππá à
,ππà â
{
∫∫ 
new
∫∫ 
Guid
∫∫ 
(
∫∫ 
$str
∫∫ E
)
∫∫E F
,
∫∫F G
$str
∫∫H O
,
∫∫O P
new
∫∫Q T
Guid
∫∫U Y
(
∫∫Y Z
$str∫∫Z Ä
)∫∫Ä Å
}∫∫Ç É
,∫∫É Ñ
{
ªª 
new
ªª 
Guid
ªª 
(
ªª 
$str
ªª E
)
ªªE F
,
ªªF G
$str
ªªH O
,
ªªO P
new
ªªQ T
Guid
ªªU Y
(
ªªY Z
$strªªZ Ä
)ªªÄ Å
}ªªÇ É
,ªªÉ Ñ
{
ºº 
new
ºº 
Guid
ºº 
(
ºº 
$str
ºº E
)
ººE F
,
ººF G
$str
ººH Q
,
ººQ R
new
ººS V
Guid
ººW [
(
ºº[ \
$strºº\ Ç
)ººÇ É
}ººÑ Ö
,ººÖ Ü
{
ΩΩ 
new
ΩΩ 
Guid
ΩΩ 
(
ΩΩ 
$str
ΩΩ E
)
ΩΩE F
,
ΩΩF G
$str
ΩΩH P
,
ΩΩP Q
new
ΩΩR U
Guid
ΩΩV Z
(
ΩΩZ [
$strΩΩ[ Å
)ΩΩÅ Ç
}ΩΩÉ Ñ
,ΩΩÑ Ö
{
ææ 
new
ææ 
Guid
ææ 
(
ææ 
$str
ææ E
)
ææE F
,
ææF G
$str
ææH U
,
ææU V
new
ææW Z
Guid
ææ[ _
(
ææ_ `
$strææ` Ü
)ææÜ á
}ææà â
,ææâ ä
{
øø 
new
øø 
Guid
øø 
(
øø 
$str
øø E
)
øøE F
,
øøF G
$str
øøH P
,
øøP Q
new
øøR U
Guid
øøV Z
(
øøZ [
$strøø[ Å
)øøÅ Ç
}øøÉ Ñ
,øøÑ Ö
{
¿¿ 
new
¿¿ 
Guid
¿¿ 
(
¿¿ 
$str
¿¿ E
)
¿¿E F
,
¿¿F G
$str
¿¿H ]
,
¿¿] ^
new
¿¿_ b
Guid
¿¿c g
(
¿¿g h
$str¿¿h é
)¿¿é è
}¿¿ê ë
,¿¿ë í
{
¡¡ 
new
¡¡ 
Guid
¡¡ 
(
¡¡ 
$str
¡¡ E
)
¡¡E F
,
¡¡F G
$str
¡¡H V
,
¡¡V W
new
¡¡X [
Guid
¡¡\ `
(
¡¡` a
$str¡¡a á
)¡¡á à
}¡¡â ä
,¡¡ä ã
{
¬¬ 
new
¬¬ 
Guid
¬¬ 
(
¬¬ 
$str
¬¬ E
)
¬¬E F
,
¬¬F G
$str
¬¬H R
,
¬¬R S
new
¬¬T W
Guid
¬¬X \
(
¬¬\ ]
$str¬¬] É
)¬¬É Ñ
}¬¬Ö Ü
,¬¬Ü á
{
√√ 
new
√√ 
Guid
√√ 
(
√√ 
$str
√√ E
)
√√E F
,
√√F G
$str
√√H O
,
√√O P
new
√√Q T
Guid
√√U Y
(
√√Y Z
$str√√Z Ä
)√√Ä Å
}√√Ç É
,√√É Ñ
{
ƒƒ 
new
ƒƒ 
Guid
ƒƒ 
(
ƒƒ 
$str
ƒƒ E
)
ƒƒE F
,
ƒƒF G
$str
ƒƒH R
,
ƒƒR S
new
ƒƒT W
Guid
ƒƒX \
(
ƒƒ\ ]
$strƒƒ] É
)ƒƒÉ Ñ
}ƒƒÖ Ü
,ƒƒÜ á
{
≈≈ 
new
≈≈ 
Guid
≈≈ 
(
≈≈ 
$str
≈≈ E
)
≈≈E F
,
≈≈F G
$str
≈≈H Q
,
≈≈Q R
new
≈≈S V
Guid
≈≈W [
(
≈≈[ \
$str≈≈\ Ç
)≈≈Ç É
}≈≈Ñ Ö
,≈≈Ö Ü
{
∆∆ 
new
∆∆ 
Guid
∆∆ 
(
∆∆ 
$str
∆∆ E
)
∆∆E F
,
∆∆F G
$str
∆∆H P
,
∆∆P Q
new
∆∆R U
Guid
∆∆V Z
(
∆∆Z [
$str∆∆[ Å
)∆∆Å Ç
}∆∆É Ñ
,∆∆Ñ Ö
{
«« 
new
«« 
Guid
«« 
(
«« 
$str
«« E
)
««E F
,
««F G
$str
««H T
,
««T U
new
««V Y
Guid
««Z ^
(
««^ _
$str««_ Ö
)««Ö Ü
}««á à
,««à â
{
»» 
new
»» 
Guid
»» 
(
»» 
$str
»» E
)
»»E F
,
»»F G
$str
»»H S
,
»»S T
new
»»U X
Guid
»»Y ]
(
»»] ^
$str»»^ Ñ
)»»Ñ Ö
}»»Ü á
,»»á à
{
…… 
new
…… 
Guid
…… 
(
…… 
$str
…… E
)
……E F
,
……F G
$str
……H Q
,
……Q R
new
……S V
Guid
……W [
(
……[ \
$str……\ Ç
)……Ç É
}……Ñ Ö
,……Ö Ü
{
   
new
   
Guid
   
(
   
$str
   E
)
  E F
,
  F G
$str
  H O
,
  O P
new
  Q T
Guid
  U Y
(
  Y Z
$str  Z Ä
)  Ä Å
}  Ç É
,  É Ñ
{
ÀÀ 
new
ÀÀ 
Guid
ÀÀ 
(
ÀÀ 
$str
ÀÀ E
)
ÀÀE F
,
ÀÀF G
$str
ÀÀH X
,
ÀÀX Y
new
ÀÀZ ]
Guid
ÀÀ^ b
(
ÀÀb c
$strÀÀc â
)ÀÀâ ä
}ÀÀã å
,ÀÀå ç
{
ÃÃ 
new
ÃÃ 
Guid
ÃÃ 
(
ÃÃ 
$str
ÃÃ E
)
ÃÃE F
,
ÃÃF G
$str
ÃÃH T
,
ÃÃT U
new
ÃÃV Y
Guid
ÃÃZ ^
(
ÃÃ^ _
$strÃÃ_ Ö
)ÃÃÖ Ü
}ÃÃá à
,ÃÃà â
{
ÕÕ 
new
ÕÕ 
Guid
ÕÕ 
(
ÕÕ 
$str
ÕÕ E
)
ÕÕE F
,
ÕÕF G
$str
ÕÕH S
,
ÕÕS T
new
ÕÕU X
Guid
ÕÕY ]
(
ÕÕ] ^
$strÕÕ^ Ñ
)ÕÕÑ Ö
}ÕÕÜ á
,ÕÕá à
{
ŒŒ 
new
ŒŒ 
Guid
ŒŒ 
(
ŒŒ 
$str
ŒŒ E
)
ŒŒE F
,
ŒŒF G
$str
ŒŒH P
,
ŒŒP Q
new
ŒŒR U
Guid
ŒŒV Z
(
ŒŒZ [
$strŒŒ[ Å
)ŒŒÅ Ç
}ŒŒÉ Ñ
,ŒŒÑ Ö
{
œœ 
new
œœ 
Guid
œœ 
(
œœ 
$str
œœ E
)
œœE F
,
œœF G
$str
œœH Q
,
œœQ R
new
œœS V
Guid
œœW [
(
œœ[ \
$strœœ\ Ç
)œœÇ É
}œœÑ Ö
,œœÖ Ü
{
–– 
new
–– 
Guid
–– 
(
–– 
$str
–– E
)
––E F
,
––F G
$str
––H S
,
––S T
new
––U X
Guid
––Y ]
(
––] ^
$str––^ Ñ
)––Ñ Ö
}––Ü á
,––á à
{
—— 
new
—— 
Guid
—— 
(
—— 
$str
—— E
)
——E F
,
——F G
$str
——H Y
,
——Y Z
new
——[ ^
Guid
——_ c
(
——c d
$str——d ä
)——ä ã
}——å ç
,——ç é
{
““ 
new
““ 
Guid
““ 
(
““ 
$str
““ E
)
““E F
,
““F G
$str
““H S
,
““S T
new
““U X
Guid
““Y ]
(
““] ^
$str““^ Ñ
)““Ñ Ö
}““Ü á
,““á à
{
”” 
new
”” 
Guid
”” 
(
”” 
$str
”” E
)
””E F
,
””F G
$str
””H [
,
””[ \
new
””] `
Guid
””a e
(
””e f
$str””f å
)””å ç
}””é è
,””è ê
{
‘‘ 
new
‘‘ 
Guid
‘‘ 
(
‘‘ 
$str
‘‘ E
)
‘‘E F
,
‘‘F G
$str
‘‘H S
,
‘‘S T
new
‘‘U X
Guid
‘‘Y ]
(
‘‘] ^
$str‘‘^ Ñ
)‘‘Ñ Ö
}‘‘Ü á
,‘‘á à
{
’’ 
new
’’ 
Guid
’’ 
(
’’ 
$str
’’ E
)
’’E F
,
’’F G
$str
’’H O
,
’’O P
new
’’Q T
Guid
’’U Y
(
’’Y Z
$str’’Z Ä
)’’Ä Å
}’’Ç É
,’’É Ñ
{
÷÷ 
new
÷÷ 
Guid
÷÷ 
(
÷÷ 
$str
÷÷ E
)
÷÷E F
,
÷÷F G
$str
÷÷H R
,
÷÷R S
new
÷÷T W
Guid
÷÷X \
(
÷÷\ ]
$str÷÷] É
)÷÷É Ñ
}÷÷Ö Ü
,÷÷Ü á
{
◊◊ 
new
◊◊ 
Guid
◊◊ 
(
◊◊ 
$str
◊◊ E
)
◊◊E F
,
◊◊F G
$str
◊◊H R
,
◊◊R S
new
◊◊T W
Guid
◊◊X \
(
◊◊\ ]
$str◊◊] É
)◊◊É Ñ
}◊◊Ö Ü
,◊◊Ü á
{
ÿÿ 
new
ÿÿ 
Guid
ÿÿ 
(
ÿÿ 
$str
ÿÿ E
)
ÿÿE F
,
ÿÿF G
$str
ÿÿH g
,
ÿÿg h
new
ÿÿi l
Guid
ÿÿm q
(
ÿÿq r
$strÿÿr ò
)ÿÿò ô
}ÿÿö õ
,ÿÿõ ú
{
ŸŸ 
new
ŸŸ 
Guid
ŸŸ 
(
ŸŸ 
$str
ŸŸ E
)
ŸŸE F
,
ŸŸF G
$str
ŸŸH \
,
ŸŸ\ ]
new
ŸŸ^ a
Guid
ŸŸb f
(
ŸŸf g
$strŸŸg ç
)ŸŸç é
}ŸŸè ê
,ŸŸê ë
{
⁄⁄ 
new
⁄⁄ 
Guid
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ E
)
⁄⁄E F
,
⁄⁄F G
$str
⁄⁄H S
,
⁄⁄S T
new
⁄⁄U X
Guid
⁄⁄Y ]
(
⁄⁄] ^
$str⁄⁄^ Ñ
)⁄⁄Ñ Ö
}⁄⁄Ü á
,⁄⁄á à
{
€€ 
new
€€ 
Guid
€€ 
(
€€ 
$str
€€ E
)
€€E F
,
€€F G
$str
€€H R
,
€€R S
new
€€T W
Guid
€€X \
(
€€\ ]
$str€€] É
)€€É Ñ
}€€Ö Ü
,€€Ü á
{
‹‹ 
new
‹‹ 
Guid
‹‹ 
(
‹‹ 
$str
‹‹ E
)
‹‹E F
,
‹‹F G
$str
‹‹H S
,
‹‹S T
new
‹‹U X
Guid
‹‹Y ]
(
‹‹] ^
$str‹‹^ Ñ
)‹‹Ñ Ö
}‹‹Ü á
,‹‹á à
{
›› 
new
›› 
Guid
›› 
(
›› 
$str
›› E
)
››E F
,
››F G
$str
››H S
,
››S T
new
››U X
Guid
››Y ]
(
››] ^
$str››^ Ñ
)››Ñ Ö
}››Ü á
,››á à
{
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
)
ﬁﬁE F
,
ﬁﬁF G
$str
ﬁﬁH R
,
ﬁﬁR S
new
ﬁﬁT W
Guid
ﬁﬁX \
(
ﬁﬁ\ ]
$strﬁﬁ] É
)ﬁﬁÉ Ñ
}ﬁﬁÖ Ü
,ﬁﬁÜ á
{
ﬂﬂ 
new
ﬂﬂ 
Guid
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ E
)
ﬂﬂE F
,
ﬂﬂF G
$str
ﬂﬂH X
,
ﬂﬂX Y
new
ﬂﬂZ ]
Guid
ﬂﬂ^ b
(
ﬂﬂb c
$strﬂﬂc â
)ﬂﬂâ ä
}ﬂﬂã å
,ﬂﬂå ç
{
‡‡ 
new
‡‡ 
Guid
‡‡ 
(
‡‡ 
$str
‡‡ E
)
‡‡E F
,
‡‡F G
$str
‡‡H O
,
‡‡O P
new
‡‡Q T
Guid
‡‡U Y
(
‡‡Y Z
$str‡‡Z Ä
)‡‡Ä Å
}‡‡Ç É
,‡‡É Ñ
{
·· 
new
·· 
Guid
·· 
(
·· 
$str
·· E
)
··E F
,
··F G
$str
··H T
,
··T U
new
··V Y
Guid
··Z ^
(
··^ _
$str··_ Ö
)··Ö Ü
}··á à
,··à â
{
‚‚ 
new
‚‚ 
Guid
‚‚ 
(
‚‚ 
$str
‚‚ E
)
‚‚E F
,
‚‚F G
$str
‚‚H S
,
‚‚S T
new
‚‚U X
Guid
‚‚Y ]
(
‚‚] ^
$str‚‚^ Ñ
)‚‚Ñ Ö
}‚‚Ü á
,‚‚á à
{
„„ 
new
„„ 
Guid
„„ 
(
„„ 
$str
„„ E
)
„„E F
,
„„F G
$str
„„H Q
,
„„Q R
new
„„S V
Guid
„„W [
(
„„[ \
$str„„\ Ç
)„„Ç É
}„„Ñ Ö
,„„Ö Ü
{
‰‰ 
new
‰‰ 
Guid
‰‰ 
(
‰‰ 
$str
‰‰ E
)
‰‰E F
,
‰‰F G
$str
‰‰H Q
,
‰‰Q R
new
‰‰S V
Guid
‰‰W [
(
‰‰[ \
$str‰‰\ Ç
)‰‰Ç É
}‰‰Ñ Ö
,‰‰Ö Ü
{
ÂÂ 
new
ÂÂ 
Guid
ÂÂ 
(
ÂÂ 
$str
ÂÂ E
)
ÂÂE F
,
ÂÂF G
$str
ÂÂH O
,
ÂÂO P
new
ÂÂQ T
Guid
ÂÂU Y
(
ÂÂY Z
$strÂÂZ Ä
)ÂÂÄ Å
}ÂÂÇ É
,ÂÂÉ Ñ
{
ÊÊ 
new
ÊÊ 
Guid
ÊÊ 
(
ÊÊ 
$str
ÊÊ E
)
ÊÊE F
,
ÊÊF G
$str
ÊÊH Q
,
ÊÊQ R
new
ÊÊS V
Guid
ÊÊW [
(
ÊÊ[ \
$strÊÊ\ Ç
)ÊÊÇ É
}ÊÊÑ Ö
,ÊÊÖ Ü
{
ÁÁ 
new
ÁÁ 
Guid
ÁÁ 
(
ÁÁ 
$str
ÁÁ E
)
ÁÁE F
,
ÁÁF G
$str
ÁÁH U
,
ÁÁU V
new
ÁÁW Z
Guid
ÁÁ[ _
(
ÁÁ_ `
$strÁÁ` Ü
)ÁÁÜ á
}ÁÁà â
,ÁÁâ ä
{
ËË 
new
ËË 
Guid
ËË 
(
ËË 
$str
ËË E
)
ËËE F
,
ËËF G
$str
ËËH R
,
ËËR S
new
ËËT W
Guid
ËËX \
(
ËË\ ]
$strËË] É
)ËËÉ Ñ
}ËËÖ Ü
,ËËÜ á
{
ÈÈ 
new
ÈÈ 
Guid
ÈÈ 
(
ÈÈ 
$str
ÈÈ E
)
ÈÈE F
,
ÈÈF G
$str
ÈÈH Q
,
ÈÈQ R
new
ÈÈS V
Guid
ÈÈW [
(
ÈÈ[ \
$strÈÈ\ Ç
)ÈÈÇ É
}ÈÈÑ Ö
,ÈÈÖ Ü
{
ÍÍ 
new
ÍÍ 
Guid
ÍÍ 
(
ÍÍ 
$str
ÍÍ E
)
ÍÍE F
,
ÍÍF G
$str
ÍÍH Q
,
ÍÍQ R
new
ÍÍS V
Guid
ÍÍW [
(
ÍÍ[ \
$strÍÍ\ Ç
)ÍÍÇ É
}ÍÍÑ Ö
,ÍÍÖ Ü
{
ÎÎ 
new
ÎÎ 
Guid
ÎÎ 
(
ÎÎ 
$str
ÎÎ E
)
ÎÎE F
,
ÎÎF G
$str
ÎÎH T
,
ÎÎT U
new
ÎÎV Y
Guid
ÎÎZ ^
(
ÎÎ^ _
$strÎÎ_ Ö
)ÎÎÖ Ü
}ÎÎá à
,ÎÎà â
{
ÏÏ 
new
ÏÏ 
Guid
ÏÏ 
(
ÏÏ 
$str
ÏÏ E
)
ÏÏE F
,
ÏÏF G
$str
ÏÏH Y
,
ÏÏY Z
new
ÏÏ[ ^
Guid
ÏÏ_ c
(
ÏÏc d
$strÏÏd ä
)ÏÏä ã
}ÏÏå ç
,ÏÏç é
{
ÌÌ 
new
ÌÌ 
Guid
ÌÌ 
(
ÌÌ 
$str
ÌÌ E
)
ÌÌE F
,
ÌÌF G
$str
ÌÌH Q
,
ÌÌQ R
new
ÌÌS V
Guid
ÌÌW [
(
ÌÌ[ \
$strÌÌ\ Ç
)ÌÌÇ É
}ÌÌÑ Ö
,ÌÌÖ Ü
{
ÓÓ 
new
ÓÓ 
Guid
ÓÓ 
(
ÓÓ 
$str
ÓÓ E
)
ÓÓE F
,
ÓÓF G
$str
ÓÓH Q
,
ÓÓQ R
new
ÓÓS V
Guid
ÓÓW [
(
ÓÓ[ \
$strÓÓ\ Ç
)ÓÓÇ É
}ÓÓÑ Ö
,ÓÓÖ Ü
{
ÔÔ 
new
ÔÔ 
Guid
ÔÔ 
(
ÔÔ 
$str
ÔÔ E
)
ÔÔE F
,
ÔÔF G
$str
ÔÔH P
,
ÔÔP Q
new
ÔÔR U
Guid
ÔÔV Z
(
ÔÔZ [
$strÔÔ[ Å
)ÔÔÅ Ç
}ÔÔÉ Ñ
,ÔÔÑ Ö
{
 
new
 
Guid
 
(
 
$str
 E
)
E F
,
F G
$str
H R
,
R S
new
T W
Guid
X \
(
\ ]
$str] É
)É Ñ
}Ö Ü
,Ü á
{
ÒÒ 
new
ÒÒ 
Guid
ÒÒ 
(
ÒÒ 
$str
ÒÒ E
)
ÒÒE F
,
ÒÒF G
$str
ÒÒH R
,
ÒÒR S
new
ÒÒT W
Guid
ÒÒX \
(
ÒÒ\ ]
$strÒÒ] É
)ÒÒÉ Ñ
}ÒÒÖ Ü
,ÒÒÜ á
{
ÚÚ 
new
ÚÚ 
Guid
ÚÚ 
(
ÚÚ 
$str
ÚÚ E
)
ÚÚE F
,
ÚÚF G
$str
ÚÚH V
,
ÚÚV W
new
ÚÚX [
Guid
ÚÚ\ `
(
ÚÚ` a
$strÚÚa á
)ÚÚá à
}ÚÚâ ä
,ÚÚä ã
{
ÛÛ 
new
ÛÛ 
Guid
ÛÛ 
(
ÛÛ 
$str
ÛÛ E
)
ÛÛE F
,
ÛÛF G
$str
ÛÛH U
,
ÛÛU V
new
ÛÛW Z
Guid
ÛÛ[ _
(
ÛÛ_ `
$strÛÛ` Ü
)ÛÛÜ á
}ÛÛà â
,ÛÛâ ä
{
ÙÙ 
new
ÙÙ 
Guid
ÙÙ 
(
ÙÙ 
$str
ÙÙ E
)
ÙÙE F
,
ÙÙF G
$str
ÙÙH P
,
ÙÙP Q
new
ÙÙR U
Guid
ÙÙV Z
(
ÙÙZ [
$strÙÙ[ Å
)ÙÙÅ Ç
}ÙÙÉ Ñ
,ÙÙÑ Ö
{
ıı 
new
ıı 
Guid
ıı 
(
ıı 
$str
ıı E
)
ııE F
,
ııF G
$str
ııH N
,
ııN O
new
ııP S
Guid
ııT X
(
ııX Y
$str
ııY 
)ıı Ä
}ııÅ Ç
,ııÇ É
{
ˆˆ 
new
ˆˆ 
Guid
ˆˆ 
(
ˆˆ 
$str
ˆˆ E
)
ˆˆE F
,
ˆˆF G
$str
ˆˆH Q
,
ˆˆQ R
new
ˆˆS V
Guid
ˆˆW [
(
ˆˆ[ \
$strˆˆ\ Ç
)ˆˆÇ É
}ˆˆÑ Ö
,ˆˆÖ Ü
{
˜˜ 
new
˜˜ 
Guid
˜˜ 
(
˜˜ 
$str
˜˜ E
)
˜˜E F
,
˜˜F G
$str
˜˜H X
,
˜˜X Y
new
˜˜Z ]
Guid
˜˜^ b
(
˜˜b c
$str˜˜c â
)˜˜â ä
}˜˜ã å
,˜˜å ç
{
¯¯ 
new
¯¯ 
Guid
¯¯ 
(
¯¯ 
$str
¯¯ E
)
¯¯E F
,
¯¯F G
$str
¯¯H O
,
¯¯O P
new
¯¯Q T
Guid
¯¯U Y
(
¯¯Y Z
$str¯¯Z Ä
)¯¯Ä Å
}¯¯Ç É
,¯¯É Ñ
{
˘˘ 
new
˘˘ 
Guid
˘˘ 
(
˘˘ 
$str
˘˘ E
)
˘˘E F
,
˘˘F G
$str
˘˘H S
,
˘˘S T
new
˘˘U X
Guid
˘˘Y ]
(
˘˘] ^
$str˘˘^ Ñ
)˘˘Ñ Ö
}˘˘Ü á
,˘˘á à
{
˙˙ 
new
˙˙ 
Guid
˙˙ 
(
˙˙ 
$str
˙˙ E
)
˙˙E F
,
˙˙F G
$str
˙˙H S
,
˙˙S T
new
˙˙U X
Guid
˙˙Y ]
(
˙˙] ^
$str˙˙^ Ñ
)˙˙Ñ Ö
}˙˙Ü á
,˙˙á à
{
˚˚ 
new
˚˚ 
Guid
˚˚ 
(
˚˚ 
$str
˚˚ E
)
˚˚E F
,
˚˚F G
$str
˚˚H R
,
˚˚R S
new
˚˚T W
Guid
˚˚X \
(
˚˚\ ]
$str˚˚] É
)˚˚É Ñ
}˚˚Ö Ü
,˚˚Ü á
{
¸¸ 
new
¸¸ 
Guid
¸¸ 
(
¸¸ 
$str
¸¸ E
)
¸¸E F
,
¸¸F G
$str
¸¸H V
,
¸¸V W
new
¸¸X [
Guid
¸¸\ `
(
¸¸` a
$str¸¸a á
)¸¸á à
}¸¸â ä
,¸¸ä ã
{
˝˝ 
new
˝˝ 
Guid
˝˝ 
(
˝˝ 
$str
˝˝ E
)
˝˝E F
,
˝˝F G
$str
˝˝H T
,
˝˝T U
new
˝˝V Y
Guid
˝˝Z ^
(
˝˝^ _
$str˝˝_ Ö
)˝˝Ö Ü
}˝˝á à
,˝˝à â
{
˛˛ 
new
˛˛ 
Guid
˛˛ 
(
˛˛ 
$str
˛˛ E
)
˛˛E F
,
˛˛F G
$str
˛˛H Q
,
˛˛Q R
new
˛˛S V
Guid
˛˛W [
(
˛˛[ \
$str˛˛\ Ç
)˛˛Ç É
}˛˛Ñ Ö
,˛˛Ö Ü
{
ˇˇ 
new
ˇˇ 
Guid
ˇˇ 
(
ˇˇ 
$str
ˇˇ E
)
ˇˇE F
,
ˇˇF G
$str
ˇˇH O
,
ˇˇO P
new
ˇˇQ T
Guid
ˇˇU Y
(
ˇˇY Z
$strˇˇZ Ä
)ˇˇÄ Å
}ˇˇÇ É
,ˇˇÉ Ñ
{
ÄÄ 
new
ÄÄ 
Guid
ÄÄ 
(
ÄÄ 
$str
ÄÄ E
)
ÄÄE F
,
ÄÄF G
$str
ÄÄH O
,
ÄÄO P
new
ÄÄQ T
Guid
ÄÄU Y
(
ÄÄY Z
$strÄÄZ Ä
)ÄÄÄ Å
}ÄÄÇ É
,ÄÄÉ Ñ
{
ÅÅ 
new
ÅÅ 
Guid
ÅÅ 
(
ÅÅ 
$str
ÅÅ E
)
ÅÅE F
,
ÅÅF G
$str
ÅÅH T
,
ÅÅT U
new
ÅÅV Y
Guid
ÅÅZ ^
(
ÅÅ^ _
$strÅÅ_ Ö
)ÅÅÖ Ü
}ÅÅá à
,ÅÅà â
{
ÇÇ 
new
ÇÇ 
Guid
ÇÇ 
(
ÇÇ 
$str
ÇÇ E
)
ÇÇE F
,
ÇÇF G
$str
ÇÇH O
,
ÇÇO P
new
ÇÇQ T
Guid
ÇÇU Y
(
ÇÇY Z
$strÇÇZ Ä
)ÇÇÄ Å
}ÇÇÇ É
,ÇÇÉ Ñ
{
ÉÉ 
new
ÉÉ 
Guid
ÉÉ 
(
ÉÉ 
$str
ÉÉ E
)
ÉÉE F
,
ÉÉF G
$str
ÉÉH U
,
ÉÉU V
new
ÉÉW Z
Guid
ÉÉ[ _
(
ÉÉ_ `
$strÉÉ` Ü
)ÉÉÜ á
}ÉÉà â
,ÉÉâ ä
{
ÑÑ 
new
ÑÑ 
Guid
ÑÑ 
(
ÑÑ 
$str
ÑÑ E
)
ÑÑE F
,
ÑÑF G
$str
ÑÑH R
,
ÑÑR S
new
ÑÑT W
Guid
ÑÑX \
(
ÑÑ\ ]
$strÑÑ] É
)ÑÑÉ Ñ
}ÑÑÖ Ü
,ÑÑÜ á
{
ÖÖ 
new
ÖÖ 
Guid
ÖÖ 
(
ÖÖ 
$str
ÖÖ E
)
ÖÖE F
,
ÖÖF G
$str
ÖÖH Q
,
ÖÖQ R
new
ÖÖS V
Guid
ÖÖW [
(
ÖÖ[ \
$strÖÖ\ Ç
)ÖÖÇ É
}ÖÖÑ Ö
,ÖÖÖ Ü
{
ÜÜ 
new
ÜÜ 
Guid
ÜÜ 
(
ÜÜ 
$str
ÜÜ E
)
ÜÜE F
,
ÜÜF G
$str
ÜÜH Q
,
ÜÜQ R
new
ÜÜS V
Guid
ÜÜW [
(
ÜÜ[ \
$strÜÜ\ Ç
)ÜÜÇ É
}ÜÜÑ Ö
,ÜÜÖ Ü
{
áá 
new
áá 
Guid
áá 
(
áá 
$str
áá E
)
ááE F
,
ááF G
$str
ááH P
,
ááP Q
new
ááR U
Guid
ááV Z
(
ááZ [
$stráá[ Å
)ááÅ Ç
}ááÉ Ñ
,ááÑ Ö
{
àà 
new
àà 
Guid
àà 
(
àà 
$str
àà E
)
ààE F
,
ààF G
$str
ààH T
,
ààT U
new
ààV Y
Guid
ààZ ^
(
àà^ _
$stràà_ Ö
)ààÖ Ü
}ààá à
,ààà â
{
ââ 
new
ââ 
Guid
ââ 
(
ââ 
$str
ââ E
)
ââE F
,
ââF G
$str
ââH P
,
ââP Q
new
ââR U
Guid
ââV Z
(
ââZ [
$strââ[ Å
)ââÅ Ç
}ââÉ Ñ
,ââÑ Ö
{
ää 
new
ää 
Guid
ää 
(
ää 
$str
ää E
)
ääE F
,
ääF G
$str
ääH T
,
ääT U
new
ääV Y
Guid
ääZ ^
(
ää^ _
$strää_ Ö
)ääÖ Ü
}ääá à
,ääà â
{
ãã 
new
ãã 
Guid
ãã 
(
ãã 
$str
ãã E
)
ããE F
,
ããF G
$str
ããH S
,
ããS T
new
ããU X
Guid
ããY ]
(
ãã] ^
$strãã^ Ñ
)ããÑ Ö
}ããÜ á
,ããá à
{
åå 
new
åå 
Guid
åå 
(
åå 
$str
åå E
)
ååE F
,
ååF G
$str
ååH S
,
ååS T
new
ååU X
Guid
ååY ]
(
åå] ^
$stråå^ Ñ
)ååÑ Ö
}ååÜ á
,ååá à
{
çç 
new
çç 
Guid
çç 
(
çç 
$str
çç E
)
ççE F
,
ççF G
$str
ççH R
,
ççR S
new
ççT W
Guid
ççX \
(
çç\ ]
$strçç] É
)ççÉ Ñ
}ççÖ Ü
,ççÜ á
{
éé 
new
éé 
Guid
éé 
(
éé 
$str
éé E
)
ééE F
,
ééF G
$str
ééH R
,
ééR S
new
ééT W
Guid
ééX \
(
éé\ ]
$stréé] É
)ééÉ Ñ
}ééÖ Ü
,ééÜ á
{
èè 
new
èè 
Guid
èè 
(
èè 
$str
èè E
)
èèE F
,
èèF G
$str
èèH S
,
èèS T
new
èèU X
Guid
èèY ]
(
èè] ^
$strèè^ Ñ
)èèÑ Ö
}èèÜ á
,èèá à
{
êê 
new
êê 
Guid
êê 
(
êê 
$str
êê E
)
êêE F
,
êêF G
$str
êêH [
,
êê[ \
new
êê] `
Guid
êêa e
(
êêe f
$strêêf å
)êêå ç
}êêé è
,êêè ê
{
ëë 
new
ëë 
Guid
ëë 
(
ëë 
$str
ëë E
)
ëëE F
,
ëëF G
$str
ëëH T
,
ëëT U
new
ëëV Y
Guid
ëëZ ^
(
ëë^ _
$strëë_ Ö
)ëëÖ Ü
}ëëá à
,ëëà â
{
íí 
new
íí 
Guid
íí 
(
íí 
$str
íí E
)
ííE F
,
ííF G
$str
ííH T
,
ííT U
new
ííV Y
Guid
ííZ ^
(
íí^ _
$stríí_ Ö
)ííÖ Ü
}ííá à
,ííà â
{
ìì 
new
ìì 
Guid
ìì 
(
ìì 
$str
ìì E
)
ììE F
,
ììF G
$str
ììH P
,
ììP Q
new
ììR U
Guid
ììV Z
(
ììZ [
$strìì[ Å
)ììÅ Ç
}ììÉ Ñ
,ììÑ Ö
{
îî 
new
îî 
Guid
îî 
(
îî 
$str
îî E
)
îîE F
,
îîF G
$str
îîH P
,
îîP Q
new
îîR U
Guid
îîV Z
(
îîZ [
$strîî[ Å
)îîÅ Ç
}îîÉ Ñ
,îîÑ Ö
{
ïï 
new
ïï 
Guid
ïï 
(
ïï 
$str
ïï E
)
ïïE F
,
ïïF G
$str
ïïH V
,
ïïV W
new
ïïX [
Guid
ïï\ `
(
ïï` a
$strïïa á
)ïïá à
}ïïâ ä
,ïïä ã
{
ññ 
new
ññ 
Guid
ññ 
(
ññ 
$str
ññ E
)
ññE F
,
ññF G
$str
ññH O
,
ññO P
new
ññQ T
Guid
ññU Y
(
ññY Z
$strññZ Ä
)ññÄ Å
}ññÇ É
,ññÉ Ñ
{
óó 
new
óó 
Guid
óó 
(
óó 
$str
óó E
)
óóE F
,
óóF G
$str
óóH Q
,
óóQ R
new
óóS V
Guid
óóW [
(
óó[ \
$stróó\ Ç
)óóÇ É
}óóÑ Ö
,óóÖ Ü
{
òò 
new
òò 
Guid
òò 
(
òò 
$str
òò E
)
òòE F
,
òòF G
$str
òòH R
,
òòR S
new
òòT W
Guid
òòX \
(
òò\ ]
$stròò] É
)òòÉ Ñ
}òòÖ Ü
,òòÜ á
{
ôô 
new
ôô 
Guid
ôô 
(
ôô 
$str
ôô E
)
ôôE F
,
ôôF G
$str
ôôH S
,
ôôS T
new
ôôU X
Guid
ôôY ]
(
ôô] ^
$strôô^ Ñ
)ôôÑ Ö
}ôôÜ á
,ôôá à
{
öö 
new
öö 
Guid
öö 
(
öö 
$str
öö E
)
ööE F
,
ööF G
$str
ööH R
,
ööR S
new
ööT W
Guid
ööX \
(
öö\ ]
$ströö] É
)ööÉ Ñ
}ööÖ Ü
,ööÜ á
{
õõ 
new
õõ 
Guid
õõ 
(
õõ 
$str
õõ E
)
õõE F
,
õõF G
$str
õõH S
,
õõS T
new
õõU X
Guid
õõY ]
(
õõ] ^
$strõõ^ Ñ
)õõÑ Ö
}õõÜ á
,õõá à
{
úú 
new
úú 
Guid
úú 
(
úú 
$str
úú E
)
úúE F
,
úúF G
$str
úúH N
,
úúN O
new
úúP S
Guid
úúT X
(
úúX Y
$str
úúY 
)úú Ä
}úúÅ Ç
,úúÇ É
{
ùù 
new
ùù 
Guid
ùù 
(
ùù 
$str
ùù E
)
ùùE F
,
ùùF G
$str
ùùH U
,
ùùU V
new
ùùW Z
Guid
ùù[ _
(
ùù_ `
$strùù` Ü
)ùùÜ á
}ùùà â
,ùùâ ä
{
ûû 
new
ûû 
Guid
ûû 
(
ûû 
$str
ûû E
)
ûûE F
,
ûûF G
$str
ûûH P
,
ûûP Q
new
ûûR U
Guid
ûûV Z
(
ûûZ [
$strûû[ Å
)ûûÅ Ç
}ûûÉ Ñ
,ûûÑ Ö
{
üü 
new
üü 
Guid
üü 
(
üü 
$str
üü E
)
üüE F
,
üüF G
$str
üüH O
,
üüO P
new
üüQ T
Guid
üüU Y
(
üüY Z
$strüüZ Ä
)üüÄ Å
}üüÇ É
,üüÉ Ñ
{
†† 
new
†† 
Guid
†† 
(
†† 
$str
†† E
)
††E F
,
††F G
$str
††H Q
,
††Q R
new
††S V
Guid
††W [
(
††[ \
$str††\ Ç
)††Ç É
}††Ñ Ö
,††Ö Ü
{
°° 
new
°° 
Guid
°° 
(
°° 
$str
°° E
)
°°E F
,
°°F G
$str
°°H Q
,
°°Q R
new
°°S V
Guid
°°W [
(
°°[ \
$str°°\ Ç
)°°Ç É
}°°Ñ Ö
,°°Ö Ü
{
¢¢ 
new
¢¢ 
Guid
¢¢ 
(
¢¢ 
$str
¢¢ E
)
¢¢E F
,
¢¢F G
$str
¢¢H T
,
¢¢T U
new
¢¢V Y
Guid
¢¢Z ^
(
¢¢^ _
$str¢¢_ Ö
)¢¢Ö Ü
}¢¢á à
,¢¢à â
{
££ 
new
££ 
Guid
££ 
(
££ 
$str
££ E
)
££E F
,
££F G
$str
££H T
,
££T U
new
££V Y
Guid
££Z ^
(
££^ _
$str££_ Ö
)££Ö Ü
}££á à
,££à â
{
§§ 
new
§§ 
Guid
§§ 
(
§§ 
$str
§§ E
)
§§E F
,
§§F G
$str
§§H W
,
§§W X
new
§§Y \
Guid
§§] a
(
§§a b
$str§§b à
)§§à â
}§§ä ã
,§§ã å
{
•• 
new
•• 
Guid
•• 
(
•• 
$str
•• E
)
••E F
,
••F G
$str
••H O
,
••O P
new
••Q T
Guid
••U Y
(
••Y Z
$str••Z Ä
)••Ä Å
}••Ç É
,••É Ñ
{
¶¶ 
new
¶¶ 
Guid
¶¶ 
(
¶¶ 
$str
¶¶ E
)
¶¶E F
,
¶¶F G
$str
¶¶H S
,
¶¶S T
new
¶¶U X
Guid
¶¶Y ]
(
¶¶] ^
$str¶¶^ Ñ
)¶¶Ñ Ö
}¶¶Ü á
,¶¶á à
{
ßß 
new
ßß 
Guid
ßß 
(
ßß 
$str
ßß E
)
ßßE F
,
ßßF G
$str
ßßH N
,
ßßN O
new
ßßP S
Guid
ßßT X
(
ßßX Y
$str
ßßY 
)ßß Ä
}ßßÅ Ç
,ßßÇ É
{
®® 
new
®® 
Guid
®® 
(
®® 
$str
®® E
)
®®E F
,
®®F G
$str
®®H Q
,
®®Q R
new
®®S V
Guid
®®W [
(
®®[ \
$str®®\ Ç
)®®Ç É
}®®Ñ Ö
,®®Ö Ü
{
©© 
new
©© 
Guid
©© 
(
©© 
$str
©© E
)
©©E F
,
©©F G
$str
©©H R
,
©©R S
new
©©T W
Guid
©©X \
(
©©\ ]
$str©©] É
)©©É Ñ
}©©Ö Ü
,©©Ü á
{
™™ 
new
™™ 
Guid
™™ 
(
™™ 
$str
™™ E
)
™™E F
,
™™F G
$str
™™H Q
,
™™Q R
new
™™S V
Guid
™™W [
(
™™[ \
$str™™\ Ç
)™™Ç É
}™™Ñ Ö
,™™Ö Ü
{
´´ 
new
´´ 
Guid
´´ 
(
´´ 
$str
´´ E
)
´´E F
,
´´F G
$str
´´H T
,
´´T U
new
´´V Y
Guid
´´Z ^
(
´´^ _
$str´´_ Ö
)´´Ö Ü
}´´á à
,´´à â
{
¨¨ 
new
¨¨ 
Guid
¨¨ 
(
¨¨ 
$str
¨¨ E
)
¨¨E F
,
¨¨F G
$str
¨¨H O
,
¨¨O P
new
¨¨Q T
Guid
¨¨U Y
(
¨¨Y Z
$str¨¨Z Ä
)¨¨Ä Å
}¨¨Ç É
,¨¨É Ñ
{
≠≠ 
new
≠≠ 
Guid
≠≠ 
(
≠≠ 
$str
≠≠ E
)
≠≠E F
,
≠≠F G
$str
≠≠H S
,
≠≠S T
new
≠≠U X
Guid
≠≠Y ]
(
≠≠] ^
$str≠≠^ Ñ
)≠≠Ñ Ö
}≠≠Ü á
,≠≠á à
{
ÆÆ 
new
ÆÆ 
Guid
ÆÆ 
(
ÆÆ 
$str
ÆÆ E
)
ÆÆE F
,
ÆÆF G
$str
ÆÆH Q
,
ÆÆQ R
new
ÆÆS V
Guid
ÆÆW [
(
ÆÆ[ \
$strÆÆ\ Ç
)ÆÆÇ É
}ÆÆÑ Ö
,ÆÆÖ Ü
{
ØØ 
new
ØØ 
Guid
ØØ 
(
ØØ 
$str
ØØ E
)
ØØE F
,
ØØF G
$str
ØØH R
,
ØØR S
new
ØØT W
Guid
ØØX \
(
ØØ\ ]
$strØØ] É
)ØØÉ Ñ
}ØØÖ Ü
,ØØÜ á
{
∞∞ 
new
∞∞ 
Guid
∞∞ 
(
∞∞ 
$str
∞∞ E
)
∞∞E F
,
∞∞F G
$str
∞∞H Q
,
∞∞Q R
new
∞∞S V
Guid
∞∞W [
(
∞∞[ \
$str∞∞\ Ç
)∞∞Ç É
}∞∞Ñ Ö
,∞∞Ö Ü
{
±± 
new
±± 
Guid
±± 
(
±± 
$str
±± E
)
±±E F
,
±±F G
$str
±±H T
,
±±T U
new
±±V Y
Guid
±±Z ^
(
±±^ _
$str±±_ Ö
)±±Ö Ü
}±±á à
,±±à â
{
≤≤ 
new
≤≤ 
Guid
≤≤ 
(
≤≤ 
$str
≤≤ E
)
≤≤E F
,
≤≤F G
$str
≤≤H S
,
≤≤S T
new
≤≤U X
Guid
≤≤Y ]
(
≤≤] ^
$str≤≤^ Ñ
)≤≤Ñ Ö
}≤≤Ü á
,≤≤á à
{
≥≥ 
new
≥≥ 
Guid
≥≥ 
(
≥≥ 
$str
≥≥ E
)
≥≥E F
,
≥≥F G
$str
≥≥H S
,
≥≥S T
new
≥≥U X
Guid
≥≥Y ]
(
≥≥] ^
$str≥≥^ Ñ
)≥≥Ñ Ö
}≥≥Ü á
,≥≥á à
{
¥¥ 
new
¥¥ 
Guid
¥¥ 
(
¥¥ 
$str
¥¥ E
)
¥¥E F
,
¥¥F G
$str
¥¥H T
,
¥¥T U
new
¥¥V Y
Guid
¥¥Z ^
(
¥¥^ _
$str¥¥_ Ö
)¥¥Ö Ü
}¥¥á à
,¥¥à â
{
µµ 
new
µµ 
Guid
µµ 
(
µµ 
$str
µµ E
)
µµE F
,
µµF G
$str
µµH R
,
µµR S
new
µµT W
Guid
µµX \
(
µµ\ ]
$strµµ] É
)µµÉ Ñ
}µµÖ Ü
,µµÜ á
{
∂∂ 
new
∂∂ 
Guid
∂∂ 
(
∂∂ 
$str
∂∂ E
)
∂∂E F
,
∂∂F G
$str
∂∂H c
,
∂∂c d
new
∂∂e h
Guid
∂∂i m
(
∂∂m n
$str∂∂n î
)∂∂î ï
}∂∂ñ ó
,∂∂ó ò
{
∑∑ 
new
∑∑ 
Guid
∑∑ 
(
∑∑ 
$str
∑∑ E
)
∑∑E F
,
∑∑F G
$str
∑∑H P
,
∑∑P Q
new
∑∑R U
Guid
∑∑V Z
(
∑∑Z [
$str∑∑[ Å
)∑∑Å Ç
}∑∑É Ñ
,∑∑Ñ Ö
{
∏∏ 
new
∏∏ 
Guid
∏∏ 
(
∏∏ 
$str
∏∏ E
)
∏∏E F
,
∏∏F G
$str
∏∏H Q
,
∏∏Q R
new
∏∏S V
Guid
∏∏W [
(
∏∏[ \
$str∏∏\ Ç
)∏∏Ç É
}∏∏Ñ Ö
,∏∏Ö Ü
{
ππ 
new
ππ 
Guid
ππ 
(
ππ 
$str
ππ E
)
ππE F
,
ππF G
$str
ππH S
,
ππS T
new
ππU X
Guid
ππY ]
(
ππ] ^
$strππ^ Ñ
)ππÑ Ö
}ππÜ á
,ππá à
{
∫∫ 
new
∫∫ 
Guid
∫∫ 
(
∫∫ 
$str
∫∫ E
)
∫∫E F
,
∫∫F G
$str
∫∫H U
,
∫∫U V
new
∫∫W Z
Guid
∫∫[ _
(
∫∫_ `
$str∫∫` Ü
)∫∫Ü á
}∫∫à â
,∫∫â ä
{
ªª 
new
ªª 
Guid
ªª 
(
ªª 
$str
ªª E
)
ªªE F
,
ªªF G
$str
ªªH ]
,
ªª] ^
new
ªª_ b
Guid
ªªc g
(
ªªg h
$strªªh é
)ªªé è
}ªªê ë
,ªªë í
{
ºº 
new
ºº 
Guid
ºº 
(
ºº 
$str
ºº E
)
ººE F
,
ººF G
$str
ººH P
,
ººP Q
new
ººR U
Guid
ººV Z
(
ººZ [
$strºº[ Å
)ººÅ Ç
}ººÉ Ñ
,ººÑ Ö
{
ΩΩ 
new
ΩΩ 
Guid
ΩΩ 
(
ΩΩ 
$str
ΩΩ E
)
ΩΩE F
,
ΩΩF G
$str
ΩΩH S
,
ΩΩS T
new
ΩΩU X
Guid
ΩΩY ]
(
ΩΩ] ^
$strΩΩ^ Ñ
)ΩΩÑ Ö
}ΩΩÜ á
,ΩΩá à
{
ææ 
new
ææ 
Guid
ææ 
(
ææ 
$str
ææ E
)
ææE F
,
ææF G
$str
ææH N
,
ææN O
new
ææP S
Guid
ææT X
(
ææX Y
$str
ææY 
)ææ Ä
}ææÅ Ç
,ææÇ É
{
øø 
new
øø 
Guid
øø 
(
øø 
$str
øø E
)
øøE F
,
øøF G
$str
øøH T
,
øøT U
new
øøV Y
Guid
øøZ ^
(
øø^ _
$strøø_ Ö
)øøÖ Ü
}øøá à
,øøà â
{
¿¿ 
new
¿¿ 
Guid
¿¿ 
(
¿¿ 
$str
¿¿ E
)
¿¿E F
,
¿¿F G
$str
¿¿H T
,
¿¿T U
new
¿¿V Y
Guid
¿¿Z ^
(
¿¿^ _
$str¿¿_ Ö
)¿¿Ö Ü
}¿¿á à
,¿¿à â
{
¡¡ 
new
¡¡ 
Guid
¡¡ 
(
¡¡ 
$str
¡¡ E
)
¡¡E F
,
¡¡F G
$str
¡¡H U
,
¡¡U V
new
¡¡W Z
Guid
¡¡[ _
(
¡¡_ `
$str¡¡` Ü
)¡¡Ü á
}¡¡à â
,¡¡â ä
{
¬¬ 
new
¬¬ 
Guid
¬¬ 
(
¬¬ 
$str
¬¬ E
)
¬¬E F
,
¬¬F G
$str
¬¬H R
,
¬¬R S
new
¬¬T W
Guid
¬¬X \
(
¬¬\ ]
$str¬¬] É
)¬¬É Ñ
}¬¬Ö Ü
,¬¬Ü á
{
√√ 
new
√√ 
Guid
√√ 
(
√√ 
$str
√√ E
)
√√E F
,
√√F G
$str
√√H O
,
√√O P
new
√√Q T
Guid
√√U Y
(
√√Y Z
$str√√Z Ä
)√√Ä Å
}√√Ç É
,√√É Ñ
{
ƒƒ 
new
ƒƒ 
Guid
ƒƒ 
(
ƒƒ 
$str
ƒƒ E
)
ƒƒE F
,
ƒƒF G
$str
ƒƒH R
,
ƒƒR S
new
ƒƒT W
Guid
ƒƒX \
(
ƒƒ\ ]
$strƒƒ] É
)ƒƒÉ Ñ
}ƒƒÖ Ü
,ƒƒÜ á
{
≈≈ 
new
≈≈ 
Guid
≈≈ 
(
≈≈ 
$str
≈≈ E
)
≈≈E F
,
≈≈F G
$str
≈≈H T
,
≈≈T U
new
≈≈V Y
Guid
≈≈Z ^
(
≈≈^ _
$str≈≈_ Ö
)≈≈Ö Ü
}≈≈á à
,≈≈à â
{
∆∆ 
new
∆∆ 
Guid
∆∆ 
(
∆∆ 
$str
∆∆ E
)
∆∆E F
,
∆∆F G
$str
∆∆H W
,
∆∆W X
new
∆∆Y \
Guid
∆∆] a
(
∆∆a b
$str∆∆b à
)∆∆à â
}∆∆ä ã
,∆∆ã å
{
«« 
new
«« 
Guid
«« 
(
«« 
$str
«« E
)
««E F
,
««F G
$str
««H S
,
««S T
new
««U X
Guid
««Y ]
(
««] ^
$str««^ Ñ
)««Ñ Ö
}««Ü á
,««á à
{
»» 
new
»» 
Guid
»» 
(
»» 
$str
»» E
)
»»E F
,
»»F G
$str
»»H V
,
»»V W
new
»»X [
Guid
»»\ `
(
»»` a
$str»»a á
)»»á à
}»»â ä
,»»ä ã
{
…… 
new
…… 
Guid
…… 
(
…… 
$str
…… E
)
……E F
,
……F G
$str
……H R
,
……R S
new
……T W
Guid
……X \
(
……\ ]
$str……] É
)……É Ñ
}……Ö Ü
,……Ü á
{
   
new
   
Guid
   
(
   
$str
   E
)
  E F
,
  F G
$str
  H N
,
  N O
new
  P S
Guid
  T X
(
  X Y
$str
  Y 
)   Ä
}  Å Ç
,  Ç É
{
ÀÀ 
new
ÀÀ 
Guid
ÀÀ 
(
ÀÀ 
$str
ÀÀ E
)
ÀÀE F
,
ÀÀF G
$str
ÀÀH W
,
ÀÀW X
new
ÀÀY \
Guid
ÀÀ] a
(
ÀÀa b
$strÀÀb à
)ÀÀà â
}ÀÀä ã
,ÀÀã å
{
ÃÃ 
new
ÃÃ 
Guid
ÃÃ 
(
ÃÃ 
$str
ÃÃ E
)
ÃÃE F
,
ÃÃF G
$str
ÃÃH R
,
ÃÃR S
new
ÃÃT W
Guid
ÃÃX \
(
ÃÃ\ ]
$strÃÃ] É
)ÃÃÉ Ñ
}ÃÃÖ Ü
,ÃÃÜ á
{
ÕÕ 
new
ÕÕ 
Guid
ÕÕ 
(
ÕÕ 
$str
ÕÕ E
)
ÕÕE F
,
ÕÕF G
$str
ÕÕH S
,
ÕÕS T
new
ÕÕU X
Guid
ÕÕY ]
(
ÕÕ] ^
$strÕÕ^ Ñ
)ÕÕÑ Ö
}ÕÕÜ á
,ÕÕá à
{
ŒŒ 
new
ŒŒ 
Guid
ŒŒ 
(
ŒŒ 
$str
ŒŒ E
)
ŒŒE F
,
ŒŒF G
$str
ŒŒH U
,
ŒŒU V
new
ŒŒW Z
Guid
ŒŒ[ _
(
ŒŒ_ `
$strŒŒ` Ü
)ŒŒÜ á
}ŒŒà â
,ŒŒâ ä
{
œœ 
new
œœ 
Guid
œœ 
(
œœ 
$str
œœ E
)
œœE F
,
œœF G
$str
œœH U
,
œœU V
new
œœW Z
Guid
œœ[ _
(
œœ_ `
$strœœ` Ü
)œœÜ á
}œœà â
,œœâ ä
{
–– 
new
–– 
Guid
–– 
(
–– 
$str
–– E
)
––E F
,
––F G
$str
––H Q
,
––Q R
new
––S V
Guid
––W [
(
––[ \
$str––\ Ç
)––Ç É
}––Ñ Ö
,––Ö Ü
{
—— 
new
—— 
Guid
—— 
(
—— 
$str
—— E
)
——E F
,
——F G
$str
——H R
,
——R S
new
——T W
Guid
——X \
(
——\ ]
$str——] É
)——É Ñ
}——Ö Ü
,——Ü á
{
““ 
new
““ 
Guid
““ 
(
““ 
$str
““ E
)
““E F
,
““F G
$str
““H V
,
““V W
new
““X [
Guid
““\ `
(
““` a
$str““a á
)““á à
}““â ä
,““ä ã
{
”” 
new
”” 
Guid
”” 
(
”” 
$str
”” E
)
””E F
,
””F G
$str
””H S
,
””S T
new
””U X
Guid
””Y ]
(
””] ^
$str””^ Ñ
)””Ñ Ö
}””Ü á
,””á à
{
‘‘ 
new
‘‘ 
Guid
‘‘ 
(
‘‘ 
$str
‘‘ E
)
‘‘E F
,
‘‘F G
$str
‘‘H R
,
‘‘R S
new
‘‘T W
Guid
‘‘X \
(
‘‘\ ]
$str‘‘] É
)‘‘É Ñ
}‘‘Ö Ü
,‘‘Ü á
{
’’ 
new
’’ 
Guid
’’ 
(
’’ 
$str
’’ E
)
’’E F
,
’’F G
$str
’’H T
,
’’T U
new
’’V Y
Guid
’’Z ^
(
’’^ _
$str’’_ Ö
)’’Ö Ü
}’’á à
,’’à â
{
÷÷ 
new
÷÷ 
Guid
÷÷ 
(
÷÷ 
$str
÷÷ E
)
÷÷E F
,
÷÷F G
$str
÷÷H R
,
÷÷R S
new
÷÷T W
Guid
÷÷X \
(
÷÷\ ]
$str÷÷] É
)÷÷É Ñ
}÷÷Ö Ü
,÷÷Ü á
{
◊◊ 
new
◊◊ 
Guid
◊◊ 
(
◊◊ 
$str
◊◊ E
)
◊◊E F
,
◊◊F G
$str
◊◊H T
,
◊◊T U
new
◊◊V Y
Guid
◊◊Z ^
(
◊◊^ _
$str◊◊_ Ö
)◊◊Ö Ü
}◊◊á à
,◊◊à â
{
ÿÿ 
new
ÿÿ 
Guid
ÿÿ 
(
ÿÿ 
$str
ÿÿ E
)
ÿÿE F
,
ÿÿF G
$str
ÿÿH T
,
ÿÿT U
new
ÿÿV Y
Guid
ÿÿZ ^
(
ÿÿ^ _
$strÿÿ_ Ö
)ÿÿÖ Ü
}ÿÿá à
,ÿÿà â
{
ŸŸ 
new
ŸŸ 
Guid
ŸŸ 
(
ŸŸ 
$str
ŸŸ E
)
ŸŸE F
,
ŸŸF G
$str
ŸŸH S
,
ŸŸS T
new
ŸŸU X
Guid
ŸŸY ]
(
ŸŸ] ^
$strŸŸ^ Ñ
)ŸŸÑ Ö
}ŸŸÜ á
,ŸŸá à
{
⁄⁄ 
new
⁄⁄ 
Guid
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ E
)
⁄⁄E F
,
⁄⁄F G
$str
⁄⁄H S
,
⁄⁄S T
new
⁄⁄U X
Guid
⁄⁄Y ]
(
⁄⁄] ^
$str⁄⁄^ Ñ
)⁄⁄Ñ Ö
}⁄⁄Ü á
,⁄⁄á à
{
€€ 
new
€€ 
Guid
€€ 
(
€€ 
$str
€€ E
)
€€E F
,
€€F G
$str
€€H U
,
€€U V
new
€€W Z
Guid
€€[ _
(
€€_ `
$str€€` Ü
)€€Ü á
}€€à â
,€€â ä
{
‹‹ 
new
‹‹ 
Guid
‹‹ 
(
‹‹ 
$str
‹‹ E
)
‹‹E F
,
‹‹F G
$str
‹‹H Q
,
‹‹Q R
new
‹‹S V
Guid
‹‹W [
(
‹‹[ \
$str‹‹\ Ç
)‹‹Ç É
}‹‹Ñ Ö
,‹‹Ö Ü
{
›› 
new
›› 
Guid
›› 
(
›› 
$str
›› E
)
››E F
,
››F G
$str
››H _
,
››_ `
new
››a d
Guid
››e i
(
››i j
$str››j ê
)››ê ë
}››í ì
,››ì î
{
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
)
ﬁﬁE F
,
ﬁﬁF G
$str
ﬁﬁH O
,
ﬁﬁO P
new
ﬁﬁQ T
Guid
ﬁﬁU Y
(
ﬁﬁY Z
$strﬁﬁZ Ä
)ﬁﬁÄ Å
}ﬁﬁÇ É
,ﬁﬁÉ Ñ
{
ﬂﬂ 
new
ﬂﬂ 
Guid
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ E
)
ﬂﬂE F
,
ﬂﬂF G
$str
ﬂﬂH T
,
ﬂﬂT U
new
ﬂﬂV Y
Guid
ﬂﬂZ ^
(
ﬂﬂ^ _
$strﬂﬂ_ Ö
)ﬂﬂÖ Ü
}ﬂﬂá à
}
‡‡ 
)
‡‡ 
;
‡‡ 
migrationBuilder
‚‚ 
.
‚‚ 
CreateIndex
‚‚ (
(
‚‚( )
name
„„ 
:
„„ 
$str
„„ *
,
„„* +
table
‰‰ 
:
‰‰ 
$str
‰‰ 
,
‰‰  
column
ÂÂ 
:
ÂÂ 
$str
ÂÂ "
)
ÂÂ" #
;
ÂÂ# $
migrationBuilder
ÁÁ 
.
ÁÁ 
CreateIndex
ÁÁ (
(
ÁÁ( )
name
ËË 
:
ËË 
$str
ËË A
,
ËËA B
table
ÈÈ 
:
ÈÈ 
$str
ÈÈ 8
,
ÈÈ8 9
column
ÍÍ 
:
ÍÍ 
$str
ÍÍ  
)
ÍÍ  !
;
ÍÍ! "
migrationBuilder
ÏÏ 
.
ÏÏ 
CreateIndex
ÏÏ (
(
ÏÏ( )
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ ,
,
ÌÌ, -
table
ÓÓ 
:
ÓÓ 
$str
ÓÓ 
,
ÓÓ  
column
ÔÔ 
:
ÔÔ 
$str
ÔÔ $
)
ÔÔ$ %
;
ÔÔ% &
migrationBuilder
ÒÒ 
.
ÒÒ 
CreateIndex
ÒÒ (
(
ÒÒ( )
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ +
,
ÚÚ+ ,
table
ÛÛ 
:
ÛÛ 
$str
ÛÛ 
,
ÛÛ  
column
ÙÙ 
:
ÙÙ 
$str
ÙÙ #
)
ÙÙ# $
;
ÙÙ$ %
migrationBuilder
ˆˆ 
.
ˆˆ 
CreateIndex
ˆˆ (
(
ˆˆ( )
name
˜˜ 
:
˜˜ 
$str
˜˜ .
,
˜˜. /
table
¯¯ 
:
¯¯ 
$str
¯¯ !
,
¯¯! "
column
˘˘ 
:
˘˘ 
$str
˘˘ $
)
˘˘$ %
;
˘˘% &
migrationBuilder
˚˚ 
.
˚˚ 
CreateIndex
˚˚ (
(
˚˚( )
name
¸¸ 
:
¸¸ 
$str
¸¸ -
,
¸¸- .
table
˝˝ 
:
˝˝ 
$str
˝˝ !
,
˝˝! "
column
˛˛ 
:
˛˛ 
$str
˛˛ #
)
˛˛# $
;
˛˛$ %
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ ,
,
ÅÅ, -
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ  
,
ÇÇ  !
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ #
)
ÉÉ# $
;
ÉÉ$ %
migrationBuilder
ÖÖ 
.
ÖÖ 
CreateIndex
ÖÖ (
(
ÖÖ( )
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ )
,
ÜÜ) *
table
áá 
:
áá 
$str
áá  
,
áá  !
column
àà 
:
àà 
$str
àà  
)
àà  !
;
àà! "
migrationBuilder
ää 
.
ää 
CreateIndex
ää (
(
ää( )
name
ãã 
:
ãã 
$str
ãã *
,
ãã* +
table
åå 
:
åå 
$str
åå !
,
åå! "
column
çç 
:
çç 
$str
çç  
)
çç  !
;
çç! "
migrationBuilder
èè 
.
èè 
CreateIndex
èè (
(
èè( )
name
êê 
:
êê 
$str
êê 0
,
êê0 1
table
ëë 
:
ëë 
$str
ëë !
,
ëë! "
column
íí 
:
íí 
$str
íí &
)
íí& '
;
íí' (
migrationBuilder
îî 
.
îî 
CreateIndex
îî (
(
îî( )
name
ïï 
:
ïï 
$str
ïï 4
,
ïï4 5
table
ññ 
:
ññ 
$str
ññ 
,
ññ 
column
óó 
:
óó 
$str
óó -
,
óó- .
unique
òò 
:
òò 
true
òò 
,
òò 
filter
ôô 
:
ôô 
$str
ôô ;
)
ôô; <
;
ôô< =
migrationBuilder
õõ 
.
õõ 
CreateIndex
õõ (
(
õõ( )
name
úú 
:
úú 
$str
úú )
,
úú) *
table
ùù 
:
ùù 
$str
ùù 
,
ùù 
column
ûû 
:
ûû 
$str
ûû "
,
ûû" #
unique
üü 
:
üü 
true
üü 
)
üü 
;
üü 
}
†† 	
	protected
££ 
override
££ 
void
££ 
Down
££  $
(
££$ %
MigrationBuilder
££% 5
migrationBuilder
££6 F
)
££F G
{
§§ 	
migrationBuilder
•• 
.
•• 
	DropTable
•• &
(
••& '
name
¶¶ 
:
¶¶ 
$str
¶¶ 7
)
¶¶7 8
;
¶¶8 9
migrationBuilder
®® 
.
®® 
	DropTable
®® &
(
®®& '
name
©© 
:
©© 
$str
©© 
)
©© 
;
©©  
migrationBuilder
´´ 
.
´´ 
	DropTable
´´ &
(
´´& '
name
¨¨ 
:
¨¨ 
$str
¨¨  
)
¨¨  !
;
¨¨! "
migrationBuilder
ÆÆ 
.
ÆÆ 
	DropTable
ÆÆ &
(
ÆÆ& '
name
ØØ 
:
ØØ 
$str
ØØ 
)
ØØ  
;
ØØ  !
migrationBuilder
±± 
.
±± 
	DropTable
±± &
(
±±& '
name
≤≤ 
:
≤≤ 
$str
≤≤  
)
≤≤  !
;
≤≤! "
migrationBuilder
¥¥ 
.
¥¥ 
	DropTable
¥¥ &
(
¥¥& '
name
µµ 
:
µµ 
$str
µµ 
)
µµ 
;
µµ 
migrationBuilder
∑∑ 
.
∑∑ 
	DropTable
∑∑ &
(
∑∑& '
name
∏∏ 
:
∏∏ 
$str
∏∏ 
)
∏∏ 
;
∏∏  
migrationBuilder
∫∫ 
.
∫∫ 
	DropTable
∫∫ &
(
∫∫& '
name
ªª 
:
ªª 
$str
ªª *
)
ªª* +
;
ªª+ ,
migrationBuilder
ΩΩ 
.
ΩΩ 
	DropTable
ΩΩ &
(
ΩΩ& '
name
ææ 
:
ææ 
$str
ææ 
)
ææ  
;
ææ  !
}
øø 	
}
¿¿ 
}¡¡ ¿9
kD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\DependencyInjection.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
;! "
public 
static 
class 
DependencyInjection '
{ 
public 

static 
IServiceCollection $
AddInfrastructure% 6
(6 7
this 
IServiceCollection 
services  (
,( )
IConfiguration 
configuration $
)$ %
{ 
services 
. 
AddServices 
( 
) 
. 
AddPersistence 
( 
configuration )
)) *
. 
AddAuth 
( 
configuration "
)" #
;# $
return 
services 
; 
}   
private"" 
static"" 
IServiceCollection"" %
AddServices""& 1
(""1 2
this""2 6
IServiceCollection""7 I
services""J R
)""R S
{## 
services$$ 
.$$ 
AddSingleton$$ 
<$$ 
IDateTimeProvider$$ /
,$$/ 0
DateTimeProvider$$1 A
>$$A B
($$B C
)$$C D
;$$D E
return%% 
services%% 
;%% 
}&& 
private(( 
static(( 
IServiceCollection(( %
AddPersistence((& 4
(((4 5
this((5 9
IServiceCollection((: L
services((M U
,((U V
IConfiguration)) 
configuration)) $
)))$ %
{** 
services++ 
.++ 
AddDbContext++ 
<++ 
DealoviyDbContext++ /
>++/ 0
(++0 1
options++1 8
=>++9 ;
{,, 	
options-- 
.-- 
UseSqlServer--  
(--  !
configuration--! .
.--. /
GetConnectionString--/ B
(--B C
$str--C V
)--V W
)--W X
;--X Y
}.. 	
)..	 

;..
 
services00 
.00 
	AddScoped00 
<00 
IUserRepository00 *
,00* +
UserRepository00, :
>00: ;
(00; <
)00< =
;00= >
services11 
.11 
	AddScoped11 
<11 
IRegionRepository11 ,
,11, -
RegionRepository11. >
>11> ?
(11? @
)11@ A
;11A B
services22 
.22 
	AddScoped22 
<22 
ICityRepository22 *
,22* +
CityRepository22, :
>22: ;
(22; <
)22< =
;22= >
services33 
.33 
	AddScoped33 
<33 (
IContractorProfileRepository33 7
,337 8'
ContractorProfileRepository339 T
>33T U
(33U V
)33V W
;33W X
services44 
.44 
	AddScoped44 
<44 
IServiceRepository44 -
,44- .
ServiceRepository44/ @
>44@ A
(44A B
)44B C
;44C D
services55 
.55 
	AddScoped55 
<55 
IRequestRepository55 -
,55- .
RequestRepository55/ @
>55@ A
(55A B
)55B C
;55C D
services66 
.66 
	AddScoped66 
<66 
IOrderRepository66 +
,66+ ,
OrderRepository66- <
>66< =
(66= >
)66> ?
;66? @
services77 
.77 
	AddScoped77 
<77 
IReviewRepository77 ,
,77, -
ReviewRepository77. >
>77> ?
(77? @
)77@ A
;77A B
return88 
services88 
;88 
}99 
private;; 
static;; 
IServiceCollection;; %
AddAuth;;& -
(;;- .
this<< 
IServiceCollection<< 
services<<  (
,<<( )
IConfiguration== 
configuration== $
)==$ %
{>> 
var?? 
jwtSettings?? 
=?? 
new?? 
JwtSettings?? )
(??) *
)??* +
;??+ ,
configuration@@ 
.@@ 
Bind@@ 
(@@ 
JwtSettings@@ &
.@@& '
SectionName@@' 2
,@@2 3
jwtSettings@@4 ?
)@@? @
;@@@ A
servicesAA 
.AA 
AddSingletonAA 
(AA 
OptionsAA %
.AA% &
CreateAA& ,
(AA, -
jwtSettingsAA- 8
)AA8 9
)AA9 :
;AA: ;
servicesCC 
.CC 
AddSingletonCC 
<CC 
IJwtTokenGeneratorCC 0
,CC0 1
JwtTokenGeneratorCC2 C
>CCC D
(CCD E
)CCE F
;CCF G#
JwtSecurityTokenHandlerEE 
.EE  &
DefaultInboundClaimTypeMapEE  :
.EE: ;
ClearEE; @
(EE@ A
)EEA B
;EEB C
servicesFF 
.FF 
AddAuthenticationFF "
(FF" #
defaultSchemeFF# 0
:FF0 1
JwtBearerDefaultsFF2 C
.FFC D 
AuthenticationSchemeFFD X
)FFX Y
.GG 
AddJwtBearerGG 
(GG 
optionsGG !
=>GG" $
{HH 
optionsII 
.II %
TokenValidationParametersII 1
=II2 3
newII4 7%
TokenValidationParametersII8 Q
{JJ 
ValidateIssuerKK "
=KK# $
trueKK% )
,KK) *
ValidateAudienceLL $
=LL% &
trueLL' +
,LL+ ,$
ValidateIssuerSigningKeyMM ,
=MM- .
trueMM/ 3
,MM3 4
ValidateLifetimeNN $
=NN% &
trueNN' +
,NN+ ,
ValidIssuerOO 
=OO  !
jwtSettingsOO" -
.OO- .
IssuerOO. 4
,OO4 5
ValidAudiencePP !
=PP" #
jwtSettingsPP$ /
.PP/ 0
AudiencePP0 8
,PP8 9
IssuerSigningKeyQQ $
=QQ% &
newQQ' * 
SymmetricSecurityKeyQQ+ ?
(QQ? @
EncodingRR  
.RR  !
UTF8RR! %
.RR% &
GetBytesRR& .
(RR. /
jwtSettingsRR/ :
.RR: ;
SecretRR; A
)RRA B
)RRB C
}SS 
;SS 
}TT 
)TT 
;TT 
servicesVV 
.VV 
AddSecurityVV 
(VV 
)VV 
;VV 
returnWW 
servicesWW 
;WW 
}XX 
privateZZ 
staticZZ 
IServiceCollectionZZ %
AddSecurityZZ& 1
(ZZ1 2
thisZZ2 6
IServiceCollectionZZ7 I
servicesZZJ R
)ZZR S
{[[ 
services\\ 
.\\ 
AddSingleton\\ 
<\\ 
IPasswordHasher\\ -
,\\- .
PasswordHasher\\/ =
>\\= >
(\\> ?
)\\? @
;\\@ A
return]] 
services]] 
;]] 
}^^ 
}__ Á
xD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\UserConfigurations.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public 
class 
UserConfigurations 
:  !$
IEntityTypeConfiguration" :
<: ;
User; ?
>? @
{		 
public

 

void

 
	Configure

 
(

 
EntityTypeBuilder

 +
<

+ ,
User

, 0
>

0 1
builder

2 9
)

9 :
{ 
ConfigureUsersTable 
( 
builder #
)# $
;$ %
} 
private 
void 
ConfigureUsersTable $
($ %
EntityTypeBuilder% 6
<6 7
User7 ;
>; <
builder= D
)D E
{ 
builder 
. 
HasKey 
( 
u 
=> 
u 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
u 
=> 
u 
.  
Id  "
)" #
. 
ValueGeneratedNever  
(  !
)! "
;" #
builder 
. 
Property 
( 
u 
=> 
u 
.  
Username  (
)( )
. 
HasMaxLength 
( 
$num 
) 
. 

IsRequired 
( 
) 
; 
builder 
. 
HasIndex 
( 
u 
=> 
u 
.  
Username  (
)( )
. 
IsUnique 
( 
) 
; 
builder 
. 
Property 
( 
u 
=> 
u 
.  
DisplayName  +
)+ ,
. 
HasMaxLength 
( 
$num 
) 
; 
builder   
.   
Property   
(   
u   
=>   
u   
.    
DisplayName    +
)  + ,
.!! 
HasMaxLength!! 
(!! 
$num!! 
)!! 
;!! 
builder## 
.## 
Property## 
(## 
u## 
=>## 
u## 
.##  
PasswordHash##  ,
)##, -
.$$ 

IsRequired$$ 
($$ 
)$$ 
;$$ 
builder&& 
.&& 
HasOne&& 
<&& 
ContractorProfile&& (
>&&( )
(&&) *
)&&* +
.'' 
WithOne'' 
('' 
)'' 
.(( 
HasForeignKey(( 
<(( 
User(( 
>((  
(((  !
u((! "
=>((# %
u((& '
.((' (
ContractorProfileId((( ;
)((; <
;((< =
})) 
}** º(
zD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\ServiceConfiguration.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public		 
class		  
ServiceConfiguration		 !
:		" #$
IEntityTypeConfiguration		$ <
<		< =
Service		= D
>		D E
{

 
public 

void 
	Configure 
( 
EntityTypeBuilder +
<+ ,
Service, 3
>3 4
builder5 <
)< =
{ 
builder 
. 
ToTable 
( 
$str "
)" #
;# $
builder 
. 
HasKey 
( 
s 
=> 
s 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
s 
=> 
s 
.  
Id  "
)" #
. 
ValueGeneratedNever  
(  !
)! "
;" #
builder 
. 
HasOne 
< 
ContractorProfile (
>( )
() *
)* +
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
s 
=> 
s  !
.! "
ContractorId" .
). /
;/ 0
builder 
. 
Property 
( 
s 
=> 
s 
.  
ContractorId  ,
), -
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
< 
City 
> 
( 
) 
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
s 
=> 
s  !
.! "
CityId" (
)( )
;) *
builder 
. 
Property 
( 
s 
=> 
s 
.  
CityId  &
)& '
. 

IsRequired 
( 
) 
; 
builder 
. 
Property 
( 
s 
=> 
s 
.  
Name  $
)$ %
.   
HasMaxLength   
(   
$num   
)   
;   
builder!! 
.!! 
Property!! 
(!! 
s!! 
=>!! 
s!! 
.!!  
Name!!  $
)!!$ %
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Property$$ 
($$ 
s$$ 
=>$$ 
s$$ 
.$$  
Description$$  +
)$$+ ,
.%% 
HasMaxLength%% 
(%% 
$num%% 
)%% 
;%% 
builder&& 
.&& 
Property&& 
(&& 
s&& 
=>&& 
s&& 
.&&  
Description&&  +
)&&+ ,
.'' 

IsRequired'' 
('' 
)'' 
;'' 
builder)) 
.)) 
OwnsOne)) 
()) 
s)) 
=>)) 
s)) 
.)) 

PriceRange)) )
,))) *
b))+ ,
=>))- /
{** 	
b++ 
.++ 
Property++ 
(++ 
pr++ 
=>++ 
pr++ 
.++  
Lower++  %
)++% &
.,, 
HasColumnName,, 
(,, 
$str,, 0
),,0 1
;,,1 2
b.. 
... 
Property.. 
(.. 
pr.. 
=>.. 
pr.. 
...  
Upper..  %
)..% &
.// 
HasColumnName// 
(// 
$str// 0
)//0 1
;//1 2
}00 	
)00	 

;00
 
builder22 
.22 
OwnsOne22 
(22 
s22 
=>22 
s22 
.22 
AverageRating22 ,
,22, -
b22. /
=>220 2
{33 	
b44 
.44 
Property44 
(44 
ar44 
=>44 
ar44 
.44  
Value44  %
)44% &
.55 
HasColumnName55 
(55 
$str55 .
)55. /
;55/ 0
b77 
.77 
Property77 
(77 
ar77 
=>77 
ar77 
.77  
Count77  %
)77% &
.88 
HasColumnName88 
(88 
$str88 ,
)88, -
;88- .
}99 	
)99	 

;99
 
}:: 
};; »
yD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\ReviewConfiguration.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public		 
class		 
ReviewConfiguration		  
:		! "$
IEntityTypeConfiguration		# ;
<		; <
Review		< B
>		B C
{

 
public 

void 
	Configure 
( 
EntityTypeBuilder +
<+ ,
Review, 2
>2 3
builder4 ;
); <
{ 
builder 
. 
ToTable 
( 
$str !
)! "
;" #
builder 
. 
HasKey 
( 
x 
=> 
x 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
x 
=> 
x 
.  
Id  "
)" #
.# $
ValueGeneratedNever$ 7
(7 8
)8 9
;9 :
builder 
. 
Property 
( 
x 
=> 
x 
.  
	ServiceId  )
)) *
.* +

IsRequired+ 5
(5 6
)6 7
;7 8
builder 
. 
HasOne 
< 
Service 
> 
(  
)  !
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
x 
=> 
x  !
.! "
	ServiceId" +
)+ ,
;, -
builder 
. 
Property 
( 
x 
=> 
x 
.  
UserId  &
)& '
.' (

IsRequired( 2
(2 3
)3 4
;4 5
builder 
. 
HasOne 
< 
User 
> 
( 
) 
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
x 
=> 
x  !
.! "
UserId" (
)( )
;) *
builder 
. 
Property 
( 
x 
=> 
x 
.  
Rating  &
)& '
.' (

IsRequired( 2
(2 3
)3 4
;4 5
builder 
. 
Property 
( 
x 
=> 
x 
.  
Text  $
)$ %
.% &

IsRequired& 0
(0 1
)1 2
;2 3
builder 
. 
Property 
( 
x 
=> 
x 
.  
Text  $
)$ %
.% &
HasMaxLength& 2
(2 3
$num3 6
)6 7
;7 8
builder   
.   
Property   
(   
x   
=>   
x   
.    
	CreatedAt    )
)  ) *
.  * +

IsRequired  + 5
(  5 6
)  6 7
;  7 8
}!! 
}"" Ê1
zD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\RequestConfiguration.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public

 
class

  
RequestConfiguration

 !
:

" #$
IEntityTypeConfiguration

$ <
<

< =
Request

= D
>

D E
{ 
public 

void 
	Configure 
( 
EntityTypeBuilder +
<+ ,
Request, 3
>3 4
builder5 <
)< =
{ 
builder 
. 
ToTable 
( 
$str "
)" #
;# $
builder 
. 
HasKey 
( 
request 
=> !
request" )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,
Id, .
). /
./ 0
ValueGeneratedNever0 C
(C D
)D E
;E F
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,
	ServiceId, 5
)5 6
.6 7

IsRequired7 A
(A B
)B C
;C D
builder 
. 
HasOne 
< 
Service 
> 
(  
)  !
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
request "
=># %
request& -
.- .
	ServiceId. 7
)7 8
;8 9
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,

CustomerId, 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
;D E
builder 
. 
HasOne 
< 
User 
> 
( 
) 
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
request "
=># %
request& -
.- .

CustomerId. 8
)8 9
;9 :
builder 
. 
Property 
( 
request  
=>! #
request$ +
.+ ,
Description, 7
)7 8
.8 9

IsRequired9 C
(C D
)D E
;E F
builder 
. 
OwnsOne 
< 
ContactInfo #
># $
($ %
nameof% +
(+ ,
Request, 3
.3 4
CustomerContactInfo4 G
)G H
,H I
bJ K
=>L N
{ 	
b   
.   
Property   
(   
ci   
=>   
ci   
.    
Type    $
)  $ %
.!! 
HasColumnName!! 
(!! 
$str!! 4
)!!4 5
."" 
HasConversion"" 
<"" 
string"" %
>""% &
(""& '
)""' (
.## 
HasMaxLength## 
(## 
$num##  
)##  !
.$$ 

IsRequired$$ 
($$ 
)$$ 
;$$ 
b%% 
.%% 
Property%% 
(%% 
ci%% 
=>%% 
ci%% 
.%%  
Value%%  %
)%%% &
.&& 
HasColumnName&& 
(&& 
$str&& 5
)&&5 6
.'' 
HasMaxLength'' 
('' 
$num'' !
)''! "
.(( 

IsRequired(( 
((( 
)(( 
;(( 
})) 	
)))	 

;))
 
builder++ 
.++ 
OwnsOne++ 
<++ 
ContactInfo++ #
>++# $
(++$ %
nameof++% +
(+++ ,
Request++, 3
.++3 4!
ContractorContactInfo++4 I
)++I J
,++J K
b++L M
=>++N P
{,, 	
b-- 
.-- 
Property-- 
(-- 
ci-- 
=>-- 
ci-- 
.--  
Type--  $
)--$ %
... 
HasColumnName.. 
(.. 
$str.. 6
)..6 7
.// 
HasConversion// 
<// 
string// %
>//% &
(//& '
)//' (
.00 
HasMaxLength00 
(00 
$num00  
)00  !
.11 

IsRequired11 
(11 
)11 
;11 
b22 
.22 
Property22 
(22 
ci22 
=>22 
ci22 
.22  
Value22  %
)22% &
.33 
HasColumnName33 
(33 
$str33 7
)337 8
.44 
HasMaxLength44 
(44 
$num44 !
)44! "
.55 

IsRequired55 
(55 
)55 
;55 
}66 	
)66	 

;66
 
builder77 
.77 
Property77 
(77 
request77  
=>77! #
request77$ +
.77+ ,
PaymentAmount77, 9
)779 :
.77: ;

IsRequired77; E
(77E F
)77F G
;77G H
builder88 
.88 
Property88 
(88 
request88  
=>88! #
request88$ +
.88+ ,
RequestDate88, 7
)887 8
.888 9

IsRequired889 C
(88C D
)88D E
;88E F
builder:: 
.:: 
Property:: 
(:: 
request::  
=>::! #
request::$ +
.::+ ,
RequestStatus::, 9
)::9 :
.;; 
HasConversion;; 
<;; 
string;; !
>;;! "
(;;" #
);;# $
;;;$ %
}<< 
}== Ó
xD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\CityConfigurations.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public 
class 
CityConfigurations 
:  !$
IEntityTypeConfiguration" :
<: ;
City; ?
>? @
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
City		, 0
>		0 1
builder		2 9
)		9 :
{

 
builder 
. 
ToTable 
( 
$str  
)  !
;! "
builder 
. 
HasKey 
( 
c 
=> 
c 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Id  "
)" #
. 
ValueGeneratedNever  
(  !
)! "
. 

IsRequired 
( 
) 
; 
builder 
. 
Property 
( 
c 
=> 
c 
.  
Name  $
)$ %
. 
HasMaxLength 
( 
$num 
) 
. 

IsRequired 
( 
) 
; 
builder 
. 
Property 
( 
c 
=> 
c 
.  
RegionId  (
)( )
. 

IsRequired 
( 
) 
; 
} 
} æ
ÑD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Configuration\ContractorProfileConfiguration.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Configuration" /
;/ 0
public 
class *
ContractorProfileConfiguration +
:, -$
IEntityTypeConfiguration. F
<F G
ContractorProfileG X
>X Y
{		 
public

 

void

 
	Configure

 
(

 
EntityTypeBuilder

 +
<

+ ,
ContractorProfile

, =
>

= >
builder

? F
)

F G
{ 
builder 
. 
ToTable 
( 
$str ,
), -
;- .
builder 
. 
HasKey 
( 
x 
=> 
x 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
x 
=> 
x 
.  
Id  "
)" #
.# $
ValueGeneratedNever$ 7
(7 8
)8 9
;9 :
builder 
. 
Property 
( 
x 
=> 
x 
.  
AdditionalInfo  .
). /
./ 0
HasMaxLength0 <
(< =
$num= @
)@ A
;A B
builder 
. 
OwnsMany 
< 
ContactInfo $
>$ %
(% &
nameof& ,
(, -
ContractorProfile- >
.> ?
ContactInfos? K
)K L
,L M
bN O
=>P R
{ 	
b 
. 
	WithOwner 
( 
) 
. 
HasForeignKey 
( 
$str '
)' (
;( )
b 
. 
Property 
< 
int 
> 
( 
$str  
)  !
.! "
ValueGeneratedOnAdd #
(# $
)$ %
;% &
b 
. 
HasKey 
( 
$str 
) 
; 
b 
. 
Property 
( 
ci 
=> 
ci 
.  
Type  $
)$ %
. 
HasConversion 
< 
string %
>% &
(& '
)' (
. 
HasMaxLength 
( 
$num  
)  !
. 

IsRequired 
( 
) 
; 
b 
. 
Property 
( 
ci 
=> 
ci 
.  
Value  %
)% &
.   
HasMaxLength   
(   
$num   !
)  ! "
.!! 

IsRequired!! 
(!! 
)!! 
;!! 
}"" 	
)""	 

;""
 
}## 
}$$ Ç"
D:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Authentication\Tokens\JwtTokenGenerator.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Authentication" 0
.0 1
Tokens1 7
;7 8
public 
class 
JwtTokenGenerator 
:  
IJwtTokenGenerator! 3
{ 
private 
readonly 
IDateTimeProvider &
_dateTimeProvider' 8
;8 9
private 
readonly 
JwtSettings  
_jwtSettings! -
;- .
public 

JwtTokenGenerator 
( 
IDateTimeProvider .
dateTimeProvider/ ?
,? @
IOptions 
< 
JwtSettings 
> 
jwtSettings )
)) *
{ 
_dateTimeProvider 
= 
dateTimeProvider ,
;, -
_jwtSettings 
= 
jwtSettings "
." #
Value# (
;( )
} 
public 

string 
GenerateToken 
(  
User  $
user% )
)) *
{ 
var 
signingCredentials 
=  
new! $
SigningCredentials% 7
(7 8
new  
SymmetricSecurityKey $
($ %
Encoding% -
.- .
UTF8. 2
.2 3
GetBytes3 ;
(; <
_jwtSettings< H
.H I
SecretI O
)O P
)P Q
,Q R
SecurityAlgorithms 
. 

HmacSha256 )
) 	
;	 

var   
claims   
=   
new   
List   
<   
Claim   #
>  # $
{!! 	
new"" 
Claim"" 
("" #
JwtRegisteredClaimNames"" -
.""- .
Sub"". 1
,""1 2
user""3 7
.""7 8
Id""8 :
."": ;
ToString""; C
(""C D
)""D E
)""E F
,""F G
new## 
Claim## 
(## #
JwtRegisteredClaimNames## -
.##- .
Name##. 2
,##2 3
user##4 8
.##8 9
Username##9 A
)##A B
,##B C
new$$ 
Claim$$ 
($$ #
JwtRegisteredClaimNames$$ -
.$$- .
Jti$$. 1
,$$1 2
Guid$$3 7
.$$7 8
NewGuid$$8 ?
($$? @
)$$@ A
.$$A B
ToString$$B J
($$J K
)$$K L
)$$L M
,$$M N
}%% 	
;%%	 

if'' 

('' 
user'' 
.'' 
ContractorProfileId'' $
is''% '
not''( +
null'', 0
)''0 1
{(( 	
claims)) 
.)) 
Add)) 
()) 
new)) 
Claim))  
())  !
$str))! 6
,))6 7
user))8 <
.))< =
ContractorProfileId))= P
.))P Q
ToString))Q Y
())Y Z
)))Z [
)))[ \
)))\ ]
;))] ^
}** 	
var,, 
token,, 
=,, 
new,, 
JwtSecurityToken,, (
(,,( )
issuer-- 
:-- 
_jwtSettings--  
.--  !
Issuer--! '
,--' (
audience.. 
:.. 
_jwtSettings.. "
..." #
Audience..# +
,..+ ,
expires// 
:// 
_dateTimeProvider// &
.//& '
UtcNow//' -
.//- .

AddMinutes00 
(00 
_jwtSettings00 '
.00' (#
ExpirationTimeInMinutes00( ?
)00? @
,00@ A
claims11 
:11 
claims11 
,11 
signingCredentials22 
:22 
signingCredentials22  2
)33 	
;33	 

return55 
new55 #
JwtSecurityTokenHandler55 *
(55* +
)55+ ,
.55, -

WriteToken55- 7
(557 8
token558 =
)55= >
;55> ?
}66 
}77 Å
yD:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Authentication\Tokens\JwtSettings.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Authentication" 0
.0 1
Tokens1 7
;7 8
public 
class 
JwtSettings 
{ 
public 

static 
string 
SectionName $
{% &
get' *
;* +
}, -
=. /
$str0 =
;= >
public 

string 
Secret 
{ 
get 
; 
set  #
;# $
}% &
=' (
null) -
!- .
;. /
public 

int #
ExpirationTimeInMinutes &
{' (
get) ,
;, -
init. 2
;2 3
}4 5
public 

string 
Issuer 
{ 
get 
; 
init  $
;$ %
}& '
=( )
null* .
!. /
;/ 0
public		 

string		 
Audience		 
{		 
get		  
;		  !
init		" &
;		& '
}		( )
=		* +
null		, 0
!		0 1
;		1 2
}

 £&
~D:\KPI\Labs_5sem\Dealovyi\pa-demyanchuk-ole\backend\Dealoviy\Dealoviy.Infrastructure\Authentication\Security\PasswordHasher.cs
	namespace 	
Dealoviy
 
. 
Infrastructure !
.! "
Authentication" 0
.0 1
Security1 9
;9 :
public 
class 
PasswordHasher 
: 
IPasswordHasher -
{ 
private 
const 
int 

Iterations  
=! "
$num# (
;( )
private

 
const

 
int

 
SaltSize

 
=

  
$num

! #
;

# $
private 
const 
int 
HashSize 
=  
$num! #
;# $
public 

string 
HashPassword 
( 
string %
password& .
). /
{ 
byte 
[ 
] 
salt 
= 
new 
byte 
[ 
SaltSize '
]' (
;( )
using 
( 
var 
rng 
= !
RandomNumberGenerator .
.. /
Create/ 5
(5 6
)6 7
)7 8
{ 	
rng 
. 
GetBytes 
( 
salt 
) 
; 
} 	
var 
pbkdf2 
= 
new 
Rfc2898DeriveBytes +
(+ ,
password, 4
,4 5
salt6 :
,: ;

Iterations< F
)F G
;G H
byte 
[ 
] 
hash 
= 
pbkdf2 
. 
GetBytes %
(% &
HashSize& .
). /
;/ 0
byte 
[ 
] 
	hashBytes 
= 
new 
byte #
[# $
SaltSize$ ,
+- .
HashSize/ 7
]7 8
;8 9
Array 
. 
Copy 
( 
salt 
, 
$num 
, 
	hashBytes %
,% &
$num' (
,( )
SaltSize* 2
)2 3
;3 4
Array 
. 
Copy 
( 
hash 
, 
$num 
, 
	hashBytes %
,% &
SaltSize' /
,/ 0
HashSize1 9
)9 :
;: ;
string 
hashedPassword 
= 
Convert  '
.' (
ToBase64String( 6
(6 7
	hashBytes7 @
)@ A
;A B
return 
hashedPassword 
; 
}   
public"" 

bool"" 
VerifyPassword"" 
("" 
string"" %
hashedPassword""& 4
,""4 5
string""6 <
password""= E
)""E F
{## 
byte$$ 
[$$ 
]$$ 
	hashBytes$$ 
=$$ 
Convert$$ "
.$$" #
FromBase64String$$# 3
($$3 4
hashedPassword$$4 B
)$$B C
;$$C D
byte&& 
[&& 
]&& 
salt&& 
=&& 
new&& 
byte&& 
[&& 
SaltSize&& '
]&&' (
;&&( )
Array'' 
.'' 
Copy'' 
('' 
	hashBytes'' 
,'' 
$num'' 
,''  
salt''! %
,''% &
$num''' (
,''( )
SaltSize''* 2
)''2 3
;''3 4
var)) 
pbkdf2)) 
=)) 
new)) 
Rfc2898DeriveBytes)) +
())+ ,
password)), 4
,))4 5
salt))6 :
,)): ;

Iterations))< F
)))F G
;))G H
byte** 
[** 
]** 
hash** 
=** 
pbkdf2** 
.** 
GetBytes** %
(**% &
HashSize**& .
)**. /
;**/ 0
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,, 
<,, 
HashSize,, $
;,,$ %
i,,& '
++,,' )
),,) *
{-- 	
if.. 
(.. 
	hashBytes.. 
[.. 
i.. 
+.. 
SaltSize.. &
]..& '
!=..( *
hash..+ /
[../ 0
i..0 1
]..1 2
)..2 3
return// 
false// 
;// 
}00 	
return22 
true22 
;22 
}33 
}44 